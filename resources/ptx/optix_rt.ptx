//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-27506705
// Cuda compilation tools, release 10.2, V10.2.89
// Based on LLVM 3.4svn
//

.version 6.5
.target sm_61
.address_size 64

	// .globl	__intersection__cylinder
.extern .func  (.param .b32 func_retval0) vprintf
(
	.param .b64 vprintf_param_0,
	.param .b64 vprintf_param_1
)
;
.const .align 8 .b8 params[256];
.global .align 1 .b8 $str[36] = {79, 80, 84, 73, 88, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 67, 79, 68, 69, 95, 83, 84, 65, 67, 75, 95, 79, 86, 69, 82, 70, 76, 79, 87, 0};
.global .align 1 .b8 $str1[42] = {79, 80, 84, 73, 88, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 67, 79, 68, 69, 95, 84, 82, 65, 67, 69, 95, 68, 69, 80, 84, 72, 95, 69, 88, 67, 69, 69, 68, 69, 68, 0};
.global .align 1 .b8 $str2[46] = {79, 80, 84, 73, 88, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 67, 79, 68, 69, 95, 84, 82, 65, 86, 69, 82, 83, 65, 76, 95, 68, 69, 80, 84, 72, 95, 69, 88, 67, 69, 69, 68, 69, 68, 0};
.global .align 1 .b8 $str3[51] = {79, 80, 84, 73, 88, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 67, 79, 68, 69, 95, 84, 82, 65, 86, 69, 82, 83, 65, 76, 95, 73, 78, 86, 65, 76, 73, 68, 95, 84, 82, 65, 86, 69, 82, 83, 65, 66, 76, 69, 0};
.global .align 1 .b8 $str4[48] = {79, 80, 84, 73, 88, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 67, 79, 68, 69, 95, 84, 82, 65, 86, 69, 82, 83, 65, 76, 95, 73, 78, 86, 65, 76, 73, 68, 95, 77, 73, 83, 83, 95, 83, 66, 84, 0};
.global .align 1 .b8 $str5[47] = {79, 80, 84, 73, 88, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 67, 79, 68, 69, 95, 84, 82, 65, 86, 69, 82, 83, 65, 76, 95, 73, 78, 86, 65, 76, 73, 68, 95, 72, 73, 84, 95, 83, 66, 84, 0};
.const .align 8 .u64 exceptions[12] = {4294967295, generic($str), 4294967294, generic($str1), 4294967293, generic($str2), 4294967291, generic($str3), 4294967290, generic($str4), 4294967289, generic($str5)};
.global .align 1 .b8 $str6[24] = {79, 112, 116, 105, 120, 32, 69, 120, 99, 101, 112, 116, 105, 111, 110, 32, 37, 117, 58, 32, 37, 115, 10, 0};

.visible .entry __intersection__cylinder(

)
{
	.reg .pred 	%p<37>;
	.reg .f32 	%f<91>;
	.reg .b32 	%r<8>;
	.reg .b64 	%rd<3>;


	// inline asm
	call (%rd2), _optix_get_sbt_data_ptr_64, ();
	// inline asm
	ld.u64 	%rd1, [%rd2+8];
	// inline asm
	call (%f18), _optix_get_ray_tmin, ();
	// inline asm
	// inline asm
	call (%f19), _optix_get_ray_tmax, ();
	// inline asm
	// inline asm
	call (%f20), _optix_get_world_ray_origin_x, ();
	// inline asm
	// inline asm
	call (%f21), _optix_get_world_ray_origin_y, ();
	// inline asm
	// inline asm
	call (%f22), _optix_get_world_ray_origin_z, ();
	// inline asm
	// inline asm
	call (%f23), _optix_get_world_ray_direction_x, ();
	// inline asm
	// inline asm
	call (%f24), _optix_get_world_ray_direction_y, ();
	// inline asm
	// inline asm
	call (%f25), _optix_get_world_ray_direction_z, ();
	// inline asm
	ld.v4.f32 	{%f27, %f28, %f29, %f30}, [%rd1+208];
	ld.f32 	%f34, [%rd1+160];
	fma.rn.f32 	%f35, %f20, %f34, %f27;
	ld.f32 	%f36, [%rd1+164];
	fma.rn.f32 	%f37, %f20, %f36, %f28;
	ld.f32 	%f38, [%rd1+168];
	fma.rn.f32 	%f39, %f20, %f38, %f29;
	ld.f32 	%f40, [%rd1+176];
	fma.rn.f32 	%f41, %f21, %f40, %f35;
	ld.f32 	%f42, [%rd1+180];
	fma.rn.f32 	%f43, %f21, %f42, %f37;
	ld.f32 	%f44, [%rd1+184];
	fma.rn.f32 	%f45, %f21, %f44, %f39;
	ld.f32 	%f46, [%rd1+192];
	fma.rn.f32 	%f47, %f22, %f46, %f41;
	ld.f32 	%f48, [%rd1+196];
	fma.rn.f32 	%f49, %f22, %f48, %f43;
	ld.f32 	%f50, [%rd1+200];
	fma.rn.f32 	%f3, %f22, %f50, %f45;
	ld.v4.f32 	{%f51, %f52, %f53, %f54}, [%rd1+160];
	mul.f32 	%f58, %f23, %f51;
	mul.f32 	%f59, %f23, %f52;
	mul.f32 	%f60, %f23, %f53;
	fma.rn.f32 	%f61, %f24, %f40, %f58;
	fma.rn.f32 	%f62, %f24, %f42, %f59;
	fma.rn.f32 	%f63, %f24, %f44, %f60;
	fma.rn.f32 	%f64, %f25, %f46, %f61;
	fma.rn.f32 	%f65, %f25, %f48, %f62;
	fma.rn.f32 	%f4, %f25, %f50, %f63;
	mul.f32 	%f66, %f65, %f65;
	fma.rn.f32 	%f5, %f64, %f64, %f66;
	mul.f32 	%f67, %f49, %f65;
	fma.rn.f32 	%f68, %f47, %f64, %f67;
	add.f32 	%f6, %f68, %f68;
	mul.f32 	%f69, %f49, %f49;
	fma.rn.f32 	%f70, %f47, %f47, %f69;
	ld.f32 	%f71, [%rd1+292];
	mul.f32 	%f72, %f71, %f71;
	sub.f32 	%f7, %f70, %f72;
	setp.eq.f32	%p5, %f5, 0f00000000;
	setp.le.f32	%p6, %f6, 0f00000000;
	and.pred  	%p7, %p5, %p6;
	mov.pred 	%p4, 0;
	mov.pred 	%p35, %p4;
	@%p7 bra 	BB0_4;

	neg.f32 	%f73, %f7;
	div.rn.f32 	%f89, %f73, %f6;
	mul.f32 	%f74, %f5, 0fC0800000;
	mul.f32 	%f75, %f74, %f7;
	fma.rn.f32 	%f9, %f6, %f6, %f75;
	setp.lt.f32	%p9, %f9, 0f00000000;
	setp.neu.f32	%p10, %f5, 0f00000000;
	and.pred  	%p11, %p9, %p10;
	@%p11 bra 	BB0_2;
	bra.uni 	BB0_3;

BB0_2:
	mov.f32 	%f88, %f89;
	mov.pred 	%p35, %p4;
	bra.uni 	BB0_4;

BB0_3:
	mov.b32 	 %r1, %f6;
	and.b32  	%r2, %r1, -2147483648;
	sqrt.rn.f32 	%f76, %f9;
	mov.b32 	 %r3, %f76;
	and.b32  	%r4, %r3, 2147483647;
	or.b32  	%r5, %r4, %r2;
	mov.b32 	 %f77, %r5;
	add.f32 	%f78, %f6, %f77;
	mul.f32 	%f79, %f78, 0fBF000000;
	div.rn.f32 	%f80, %f79, %f5;
	div.rn.f32 	%f81, %f7, %f79;
	min.f32 	%f82, %f80, %f81;
	max.f32 	%f83, %f80, %f81;
	selp.f32	%f88, %f89, %f82, %p5;
	selp.f32	%f89, %f89, %f83, %p5;
	mov.pred 	%p35, -1;

BB0_4:
	setp.le.f32	%p15, %f88, %f19;
	setp.ge.f32	%p16, %f89, %f18;
	and.pred  	%p17, %p15, %p16;
	fma.rn.f32 	%f14, %f4, %f88, %f3;
	fma.rn.f32 	%f15, %f4, %f89, %f3;
	setp.geu.f32	%p18, %f88, %f18;
	setp.leu.f32	%p19, %f89, %f19;
	or.pred  	%p20, %p18, %p19;
	and.pred  	%p21, %p17, %p35;
	and.pred  	%p22, %p21, %p20;
	mov.pred 	%p36, %p4;
	@!%p22 bra 	BB0_11;
	bra.uni 	BB0_5;

BB0_5:
	setp.ltu.f32	%p23, %f14, 0f00000000;
	@%p23 bra 	BB0_7;

	ld.f32 	%f84, [%rd1+288];
	setp.le.f32	%p25, %f14, %f84;
	setp.ge.f32	%p26, %f88, %f18;
	and.pred  	%p27, %p25, %p26;
	mov.pred 	%p36, -1;
	@%p27 bra 	BB0_11;

BB0_7:
	setp.ltu.f32	%p29, %f15, 0f00000000;
	@%p29 bra 	BB0_8;
	bra.uni 	BB0_9;

BB0_8:
	mov.pred 	%p36, %p4;
	bra.uni 	BB0_11;

BB0_9:
	ld.f32 	%f85, [%rd1+288];
	setp.gtu.f32	%p31, %f15, %f85;
	mov.pred 	%p36, %p4;
	@%p31 bra 	BB0_11;

	setp.le.f32	%p36, %f89, %f19;

BB0_11:
	setp.ltu.f32	%p32, %f14, 0f00000000;
	@%p32 bra 	BB0_14;

	ld.f32 	%f86, [%rd1+288];
	setp.gtu.f32	%p33, %f14, %f86;
	@%p33 bra 	BB0_14;

	setp.ge.f32	%p34, %f88, %f18;
	selp.f32	%f89, %f88, %f89, %p34;

BB0_14:
	@!%p36 bra 	BB0_16;
	bra.uni 	BB0_15;

BB0_15:
	mov.u32 	%r7, 254;
	// inline asm
	call (%r6), _optix_report_intersection_0, (%f89, %r7);
	// inline asm

BB0_16:
	ret;
}

	// .globl	__closesthit__cylinder
.visible .entry __closesthit__cylinder(

)
{
	.reg .pred 	%p<15>;
	.reg .b16 	%rs<4>;
	.reg .f32 	%f<169>;
	.reg .b32 	%r<22>;
	.reg .f64 	%fd<5>;
	.reg .b64 	%rd<74>;


	// inline asm
	call (%r4), _optix_get_launch_dimension_x, ();
	// inline asm
	// inline asm
	call (%r5), _optix_get_launch_dimension_y, ();
	// inline asm
	// inline asm
	call (%r7), _optix_get_launch_index_x, ();
	// inline asm
	// inline asm
	call (%r8), _optix_get_launch_index_y, ();
	// inline asm
	// inline asm
	call (%r9), _optix_get_launch_index_z, ();
	// inline asm
	mad.lo.s32 	%r10, %r9, %r5, %r8;
	mad.lo.s32 	%r1, %r10, %r4, %r7;
	ld.const.u64 	%rd1, [params+232];
	setp.eq.s64	%p1, %rd1, 0;
	@%p1 bra 	BB1_2;

	cvta.to.global.u64 	%rd5, %rd1;
	cvt.u64.u32	%rd6, %r1;
	add.s64 	%rd7, %rd5, %rd6;
	mov.u16 	%rs2, 1;
	st.global.u8 	[%rd7], %rs2;
	bra.uni 	BB1_14;

BB1_2:
	// inline asm
	call (%rd8), _optix_get_sbt_data_ptr_64, ();
	// inline asm
	ld.u64 	%rd3, [%rd8+8];
	// inline asm
	call (%f41), _optix_get_world_ray_origin_x, ();
	// inline asm
	// inline asm
	call (%f42), _optix_get_world_ray_origin_y, ();
	// inline asm
	// inline asm
	call (%f43), _optix_get_world_ray_origin_z, ();
	// inline asm
	// inline asm
	call (%f44), _optix_get_world_ray_direction_x, ();
	// inline asm
	// inline asm
	call (%f45), _optix_get_world_ray_direction_y, ();
	// inline asm
	// inline asm
	call (%f46), _optix_get_world_ray_direction_z, ();
	// inline asm
	// inline asm
	call (%f47), _optix_get_ray_tmax, ();
	// inline asm
	fma.rn.f32 	%f166, %f47, %f44, %f41;
	fma.rn.f32 	%f167, %f47, %f45, %f42;
	fma.rn.f32 	%f168, %f47, %f46, %f43;
	ld.v4.f32 	{%f48, %f49, %f50, %f51}, [%rd3+208];
	ld.f32 	%f55, [%rd3+160];
	fma.rn.f32 	%f56, %f166, %f55, %f48;
	ld.f32 	%f57, [%rd3+164];
	fma.rn.f32 	%f58, %f166, %f57, %f49;
	ld.f32 	%f59, [%rd3+168];
	fma.rn.f32 	%f60, %f166, %f59, %f50;
	ld.f32 	%f61, [%rd3+176];
	fma.rn.f32 	%f62, %f167, %f61, %f56;
	ld.f32 	%f63, [%rd3+180];
	fma.rn.f32 	%f64, %f167, %f63, %f58;
	ld.f32 	%f65, [%rd3+184];
	fma.rn.f32 	%f66, %f167, %f65, %f60;
	ld.f32 	%f67, [%rd3+192];
	fma.rn.f32 	%f5, %f168, %f67, %f62;
	ld.f32 	%f68, [%rd3+196];
	fma.rn.f32 	%f6, %f168, %f68, %f64;
	ld.f32 	%f69, [%rd3+200];
	fma.rn.f32 	%f7, %f168, %f69, %f66;
	abs.f32 	%f8, %f5;
	abs.f32 	%f9, %f6;
	setp.eq.f32	%p2, %f8, 0f00000000;
	setp.eq.f32	%p3, %f9, 0f00000000;
	and.pred  	%p4, %p2, %p3;
	mov.b32 	 %r2, %f5;
	mov.b32 	 %r11, %f6;
	and.b32  	%r3, %r11, -2147483648;
	@%p4 bra 	BB1_6;
	bra.uni 	BB1_3;

BB1_6:
	shr.s32 	%r18, %r2, 31;
	and.b32  	%r19, %r18, 1078530011;
	or.b32  	%r20, %r19, %r3;
	mov.b32 	 %f155, %r20;
	bra.uni 	BB1_7;

BB1_3:
	setp.eq.f32	%p5, %f8, 0f7F800000;
	setp.eq.f32	%p6, %f9, 0f7F800000;
	and.pred  	%p7, %p5, %p6;
	@%p7 bra 	BB1_5;
	bra.uni 	BB1_4;

BB1_5:
	shr.s32 	%r14, %r2, 31;
	and.b32  	%r15, %r14, 13483017;
	add.s32 	%r16, %r15, 1061752795;
	or.b32  	%r17, %r16, %r3;
	mov.b32 	 %f155, %r17;
	bra.uni 	BB1_7;

BB1_4:
	max.f32 	%f70, %f9, %f8;
	min.f32 	%f71, %f9, %f8;
	div.rn.f32 	%f72, %f71, %f70;
	mul.rn.f32 	%f73, %f72, %f72;
	mov.f32 	%f74, 0fC0B59883;
	mov.f32 	%f75, 0fBF52C7EA;
	fma.rn.f32 	%f76, %f73, %f75, %f74;
	mov.f32 	%f77, 0fC0D21907;
	fma.rn.f32 	%f78, %f76, %f73, %f77;
	mul.f32 	%f79, %f73, %f78;
	mul.f32 	%f80, %f72, %f79;
	add.f32 	%f81, %f73, 0f41355DC0;
	mov.f32 	%f82, 0f41E6BD60;
	fma.rn.f32 	%f83, %f81, %f73, %f82;
	mov.f32 	%f84, 0f419D92C8;
	fma.rn.f32 	%f85, %f83, %f73, %f84;
	rcp.rn.f32 	%f86, %f85;
	fma.rn.f32 	%f87, %f80, %f86, %f72;
	mov.f32 	%f88, 0f3FC90FDB;
	sub.f32 	%f89, %f88, %f87;
	setp.gt.f32	%p8, %f9, %f8;
	selp.f32	%f90, %f89, %f87, %p8;
	mov.f32 	%f91, 0f40490FDB;
	sub.f32 	%f92, %f91, %f90;
	setp.lt.s32	%p9, %r2, 0;
	selp.f32	%f93, %f92, %f90, %p9;
	mov.b32 	 %r12, %f93;
	or.b32  	%r13, %r12, %r3;
	mov.b32 	 %f94, %r13;
	add.f32 	%f95, %f8, %f9;
	setp.gtu.f32	%p10, %f95, 0f7F800000;
	selp.f32	%f155, %f95, %f94, %p10;

BB1_7:
	setp.geu.f32	%p11, %f155, 0f00000000;
	@%p11 bra 	BB1_9;

	cvt.f64.f32	%fd1, %f155;
	add.f64 	%fd2, %fd1, 0d401921FB54442D18;
	cvt.rn.f32.f64	%f155, %fd2;

BB1_9:
	ld.f32 	%f16, [%rd3+288];
	ld.const.u8 	%rs1, [params+248];
	setp.eq.s16	%p12, %rs1, 0;
	@%p12 bra 	BB1_11;

	mul.f32 	%f97, %f6, 0fC0C90FDB;
	ld.v4.f32 	{%f98, %f99, %f100, %f101}, [%rd3+32];
	mul.f32 	%f105, %f97, %f98;
	mul.f32 	%f106, %f97, %f99;
	mul.f32 	%f107, %f97, %f100;
	ld.v4.f32 	{%f108, %f109, %f110, %f111}, [%rd3+48];
	mul.f32 	%f115, %f5, 0f40C90FDB;
	fma.rn.f32 	%f116, %f115, %f108, %f105;
	fma.rn.f32 	%f117, %f115, %f109, %f106;
	fma.rn.f32 	%f118, %f115, %f110, %f107;
	ld.f32 	%f119, [%rd3+64];
	mov.f32 	%f120, 0f00000000;
	fma.rn.f32 	%f160, %f120, %f119, %f116;
	ld.f32 	%f121, [%rd3+68];
	fma.rn.f32 	%f161, %f120, %f121, %f117;
	ld.f32 	%f122, [%rd3+72];
	fma.rn.f32 	%f162, %f120, %f122, %f118;
	mul.f32 	%f123, %f98, 0f00000000;
	mul.f32 	%f124, %f99, 0f00000000;
	mul.f32 	%f125, %f100, 0f00000000;
	fma.rn.f32 	%f126, %f120, %f108, %f123;
	fma.rn.f32 	%f127, %f120, %f109, %f124;
	fma.rn.f32 	%f128, %f120, %f110, %f125;
	fma.rn.f32 	%f157, %f16, %f119, %f126;
	fma.rn.f32 	%f158, %f16, %f121, %f127;
	fma.rn.f32 	%f159, %f16, %f122, %f128;
	mul.f32 	%f129, %f159, %f161;
	mul.f32 	%f130, %f162, %f158;
	sub.f32 	%f131, %f129, %f130;
	mul.f32 	%f132, %f162, %f157;
	mul.f32 	%f133, %f160, %f159;
	sub.f32 	%f134, %f132, %f133;
	mul.f32 	%f135, %f160, %f158;
	mul.f32 	%f136, %f161, %f157;
	sub.f32 	%f137, %f135, %f136;
	mul.f32 	%f138, %f131, %f131;
	fma.rn.f32 	%f139, %f134, %f134, %f138;
	fma.rn.f32 	%f140, %f137, %f137, %f139;
	sqrt.rn.f32 	%f141, %f140;
	div.rn.f32 	%f142, %f131, %f141;
	div.rn.f32 	%f143, %f134, %f141;
	div.rn.f32 	%f144, %f137, %f141;
	mul.f32 	%f145, %f5, %f5;
	fma.rn.f32 	%f146, %f6, %f6, %f145;
	sqrt.rn.f32 	%f147, %f146;
	ld.f32 	%f148, [%rd3+292];
	sub.f32 	%f149, %f148, %f147;
	fma.rn.f32 	%f166, %f142, %f149, %f166;
	fma.rn.f32 	%f167, %f143, %f149, %f167;
	fma.rn.f32 	%f168, %f144, %f149, %f168;
	ld.u8 	%rs3, [%rd3+296];
	setp.eq.s16	%p13, %rs3, 0;
	neg.f32 	%f150, %f142;
	neg.f32 	%f151, %f143;
	neg.f32 	%f152, %f144;
	selp.f32	%f163, %f142, %f150, %p13;
	selp.f32	%f164, %f143, %f151, %p13;
	selp.f32	%f165, %f144, %f152, %p13;

BB1_11:
	ld.u64 	%rd9, [%rd8];
	// inline asm
	call (%r21), _optix_read_primitive_idx, ();
	// inline asm
	ld.const.u64 	%rd10, [params+216];
	cvta.to.global.u64 	%rd11, %rd10;
	cvt.u64.u32	%rd4, %r1;
	mul.wide.u32 	%rd12, %r1, 8;
	add.s64 	%rd13, %rd11, %rd12;
	st.global.u64 	[%rd13], %rd9;
	ld.const.u64 	%rd14, [params+224];
	cvta.to.global.u64 	%rd15, %rd14;
	mul.wide.u32 	%rd16, %r1, 4;
	add.s64 	%rd17, %rd15, %rd16;
	st.global.u32 	[%rd17], %r21;
	ld.const.u64 	%rd18, [params+80];
	cvta.to.global.u64 	%rd19, %rd18;
	add.s64 	%rd20, %rd19, %rd16;
	cvt.f64.f32	%fd3, %f155;
	div.rn.f64 	%fd4, %fd3, 0d401921FB54442D18;
	cvt.rn.f32.f64	%f153, %fd4;
	st.global.f32 	[%rd20], %f153;
	ld.const.u64 	%rd21, [params+88];
	cvta.to.global.u64 	%rd22, %rd21;
	add.s64 	%rd23, %rd22, %rd16;
	div.rn.f32 	%f154, %f7, %f16;
	st.global.f32 	[%rd23], %f154;
	ld.const.u64 	%rd24, [params+144];
	cvta.to.global.u64 	%rd25, %rd24;
	add.s64 	%rd26, %rd25, %rd16;
	st.global.f32 	[%rd26], %f166;
	ld.const.u64 	%rd27, [params+152];
	cvta.to.global.u64 	%rd28, %rd27;
	add.s64 	%rd29, %rd28, %rd16;
	st.global.f32 	[%rd29], %f167;
	ld.const.u64 	%rd30, [params+160];
	cvta.to.global.u64 	%rd31, %rd30;
	add.s64 	%rd32, %rd31, %rd16;
	st.global.f32 	[%rd32], %f168;
	@%p12 bra 	BB1_13;

	ld.const.u64 	%rd33, [params+96];
	cvta.to.global.u64 	%rd34, %rd33;
	shl.b64 	%rd35, %rd4, 2;
	add.s64 	%rd36, %rd34, %rd35;
	st.global.f32 	[%rd36], %f163;
	ld.const.u64 	%rd37, [params+104];
	cvta.to.global.u64 	%rd38, %rd37;
	add.s64 	%rd39, %rd38, %rd35;
	st.global.f32 	[%rd39], %f164;
	ld.const.u64 	%rd40, [params+112];
	cvta.to.global.u64 	%rd41, %rd40;
	add.s64 	%rd42, %rd41, %rd35;
	st.global.f32 	[%rd42], %f165;
	ld.const.u64 	%rd43, [params+120];
	cvta.to.global.u64 	%rd44, %rd43;
	add.s64 	%rd45, %rd44, %rd35;
	st.global.f32 	[%rd45], %f163;
	ld.const.u64 	%rd46, [params+128];
	cvta.to.global.u64 	%rd47, %rd46;
	add.s64 	%rd48, %rd47, %rd35;
	st.global.f32 	[%rd48], %f164;
	ld.const.u64 	%rd49, [params+136];
	cvta.to.global.u64 	%rd50, %rd49;
	add.s64 	%rd51, %rd50, %rd35;
	st.global.f32 	[%rd51], %f165;
	ld.const.u64 	%rd52, [params+168];
	cvta.to.global.u64 	%rd53, %rd52;
	add.s64 	%rd54, %rd53, %rd35;
	st.global.f32 	[%rd54], %f160;
	ld.const.u64 	%rd55, [params+176];
	cvta.to.global.u64 	%rd56, %rd55;
	add.s64 	%rd57, %rd56, %rd35;
	st.global.f32 	[%rd57], %f161;
	ld.const.u64 	%rd58, [params+184];
	cvta.to.global.u64 	%rd59, %rd58;
	add.s64 	%rd60, %rd59, %rd35;
	st.global.f32 	[%rd60], %f162;
	ld.const.u64 	%rd61, [params+192];
	cvta.to.global.u64 	%rd62, %rd61;
	add.s64 	%rd63, %rd62, %rd35;
	st.global.f32 	[%rd63], %f157;
	ld.const.u64 	%rd64, [params+200];
	cvta.to.global.u64 	%rd65, %rd64;
	add.s64 	%rd66, %rd65, %rd35;
	st.global.f32 	[%rd66], %f158;
	ld.const.u64 	%rd67, [params+208];
	cvta.to.global.u64 	%rd68, %rd67;
	add.s64 	%rd69, %rd68, %rd35;
	st.global.f32 	[%rd69], %f159;

BB1_13:
	ld.const.u64 	%rd70, [params+72];
	cvta.to.global.u64 	%rd71, %rd70;
	shl.b64 	%rd72, %rd4, 2;
	add.s64 	%rd73, %rd71, %rd72;
	st.global.f32 	[%rd73], %f47;

BB1_14:
	ret;
}

	// .globl	__intersection__disk
.visible .entry __intersection__disk(

)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<55>;
	.reg .b32 	%r<3>;
	.reg .b64 	%rd<3>;


	// inline asm
	call (%rd1), _optix_get_sbt_data_ptr_64, ();
	// inline asm
	ld.u64 	%rd2, [%rd1+8];
	// inline asm
	call (%f2), _optix_get_world_ray_origin_x, ();
	// inline asm
	// inline asm
	call (%f3), _optix_get_world_ray_origin_y, ();
	// inline asm
	// inline asm
	call (%f4), _optix_get_world_ray_origin_z, ();
	// inline asm
	// inline asm
	call (%f5), _optix_get_world_ray_direction_x, ();
	// inline asm
	// inline asm
	call (%f6), _optix_get_world_ray_direction_y, ();
	// inline asm
	// inline asm
	call (%f7), _optix_get_world_ray_direction_z, ();
	// inline asm
	ld.v4.f32 	{%f8, %f9, %f10, %f11}, [%rd2+208];
	ld.f32 	%f15, [%rd2+160];
	fma.rn.f32 	%f16, %f2, %f15, %f8;
	ld.f32 	%f17, [%rd2+164];
	fma.rn.f32 	%f18, %f2, %f17, %f9;
	ld.f32 	%f19, [%rd2+168];
	fma.rn.f32 	%f20, %f2, %f19, %f10;
	ld.f32 	%f21, [%rd2+176];
	fma.rn.f32 	%f22, %f3, %f21, %f16;
	ld.f32 	%f23, [%rd2+180];
	fma.rn.f32 	%f24, %f3, %f23, %f18;
	ld.f32 	%f25, [%rd2+184];
	fma.rn.f32 	%f26, %f3, %f25, %f20;
	ld.f32 	%f27, [%rd2+192];
	fma.rn.f32 	%f28, %f4, %f27, %f22;
	ld.f32 	%f29, [%rd2+196];
	fma.rn.f32 	%f30, %f4, %f29, %f24;
	ld.f32 	%f31, [%rd2+200];
	fma.rn.f32 	%f32, %f4, %f31, %f26;
	ld.v4.f32 	{%f33, %f34, %f35, %f36}, [%rd2+160];
	mul.f32 	%f40, %f5, %f33;
	mul.f32 	%f41, %f5, %f34;
	mul.f32 	%f42, %f5, %f35;
	fma.rn.f32 	%f43, %f6, %f21, %f40;
	fma.rn.f32 	%f44, %f6, %f23, %f41;
	fma.rn.f32 	%f45, %f6, %f25, %f42;
	fma.rn.f32 	%f46, %f7, %f27, %f43;
	fma.rn.f32 	%f47, %f7, %f29, %f44;
	fma.rn.f32 	%f48, %f7, %f31, %f45;
	neg.f32 	%f49, %f32;
	div.rn.f32 	%f1, %f49, %f48;
	fma.rn.f32 	%f50, %f1, %f46, %f28;
	fma.rn.f32 	%f51, %f1, %f47, %f30;
	mul.f32 	%f52, %f51, %f51;
	fma.rn.f32 	%f53, %f50, %f50, %f52;
	setp.gtu.f32	%p1, %f53, 0f3F800000;
	@%p1 bra 	BB2_2;

	mov.u32 	%r2, 254;
	// inline asm
	call (%r1), _optix_report_intersection_0, (%f1, %r2);
	// inline asm

BB2_2:
	ret;
}

	// .globl	__closesthit__disk
.visible .entry __closesthit__disk(

)
{
	.reg .pred 	%p<15>;
	.reg .b16 	%rs<3>;
	.reg .f32 	%f<195>;
	.reg .b32 	%r<22>;
	.reg .f64 	%fd<3>;
	.reg .b64 	%rd<74>;


	// inline asm
	call (%r4), _optix_get_launch_dimension_x, ();
	// inline asm
	// inline asm
	call (%r5), _optix_get_launch_dimension_y, ();
	// inline asm
	// inline asm
	call (%r7), _optix_get_launch_index_x, ();
	// inline asm
	// inline asm
	call (%r8), _optix_get_launch_index_y, ();
	// inline asm
	// inline asm
	call (%r9), _optix_get_launch_index_z, ();
	// inline asm
	mad.lo.s32 	%r10, %r9, %r5, %r8;
	mad.lo.s32 	%r1, %r10, %r4, %r7;
	ld.const.u64 	%rd1, [params+232];
	setp.eq.s64	%p1, %rd1, 0;
	@%p1 bra 	BB3_2;

	cvta.to.global.u64 	%rd5, %rd1;
	cvt.u64.u32	%rd6, %r1;
	add.s64 	%rd7, %rd5, %rd6;
	mov.u16 	%rs2, 1;
	st.global.u8 	[%rd7], %rs2;
	bra.uni 	BB3_12;

BB3_2:
	// inline asm
	call (%rd8), _optix_get_sbt_data_ptr_64, ();
	// inline asm
	ld.u64 	%rd3, [%rd8+8];
	// inline asm
	call (%f38), _optix_get_world_ray_origin_x, ();
	// inline asm
	// inline asm
	call (%f39), _optix_get_world_ray_origin_y, ();
	// inline asm
	// inline asm
	call (%f40), _optix_get_world_ray_origin_z, ();
	// inline asm
	// inline asm
	call (%f41), _optix_get_world_ray_direction_x, ();
	// inline asm
	// inline asm
	call (%f42), _optix_get_world_ray_direction_y, ();
	// inline asm
	// inline asm
	call (%f43), _optix_get_world_ray_direction_z, ();
	// inline asm
	ld.v4.f32 	{%f44, %f45, %f46, %f47}, [%rd3+208];
	ld.f32 	%f51, [%rd3+160];
	fma.rn.f32 	%f52, %f38, %f51, %f44;
	ld.f32 	%f53, [%rd3+164];
	fma.rn.f32 	%f54, %f38, %f53, %f45;
	ld.f32 	%f55, [%rd3+168];
	fma.rn.f32 	%f56, %f38, %f55, %f46;
	ld.f32 	%f57, [%rd3+176];
	fma.rn.f32 	%f58, %f39, %f57, %f52;
	ld.f32 	%f59, [%rd3+180];
	fma.rn.f32 	%f60, %f39, %f59, %f54;
	ld.f32 	%f61, [%rd3+184];
	fma.rn.f32 	%f62, %f39, %f61, %f56;
	ld.f32 	%f63, [%rd3+192];
	fma.rn.f32 	%f64, %f40, %f63, %f58;
	ld.f32 	%f65, [%rd3+196];
	fma.rn.f32 	%f66, %f40, %f65, %f60;
	ld.f32 	%f67, [%rd3+200];
	fma.rn.f32 	%f68, %f40, %f67, %f62;
	ld.v4.f32 	{%f69, %f70, %f71, %f72}, [%rd3+160];
	mul.f32 	%f76, %f41, %f69;
	mul.f32 	%f77, %f41, %f70;
	mul.f32 	%f78, %f41, %f71;
	fma.rn.f32 	%f79, %f42, %f57, %f76;
	fma.rn.f32 	%f80, %f42, %f59, %f77;
	fma.rn.f32 	%f81, %f42, %f61, %f78;
	fma.rn.f32 	%f82, %f43, %f63, %f79;
	fma.rn.f32 	%f83, %f43, %f65, %f80;
	fma.rn.f32 	%f84, %f43, %f67, %f81;
	neg.f32 	%f85, %f68;
	div.rn.f32 	%f7, %f85, %f84;
	fma.rn.f32 	%f8, %f7, %f82, %f64;
	fma.rn.f32 	%f9, %f7, %f83, %f66;
	mul.f32 	%f86, %f8, %f8;
	fma.rn.f32 	%f87, %f9, %f9, %f86;
	sqrt.rn.f32 	%f10, %f87;
	abs.f32 	%f11, %f8;
	abs.f32 	%f12, %f9;
	setp.eq.f32	%p2, %f11, 0f00000000;
	setp.eq.f32	%p3, %f12, 0f00000000;
	and.pred  	%p4, %p2, %p3;
	mov.b32 	 %r2, %f8;
	mov.b32 	 %r11, %f9;
	and.b32  	%r3, %r11, -2147483648;
	@%p4 bra 	BB3_6;
	bra.uni 	BB3_3;

BB3_6:
	shr.s32 	%r18, %r2, 31;
	and.b32  	%r19, %r18, 1078530011;
	or.b32  	%r20, %r19, %r3;
	mov.b32 	 %f185, %r20;
	bra.uni 	BB3_7;

BB3_3:
	setp.eq.f32	%p5, %f11, 0f7F800000;
	setp.eq.f32	%p6, %f12, 0f7F800000;
	and.pred  	%p7, %p5, %p6;
	@%p7 bra 	BB3_5;
	bra.uni 	BB3_4;

BB3_5:
	shr.s32 	%r14, %r2, 31;
	and.b32  	%r15, %r14, 13483017;
	add.s32 	%r16, %r15, 1061752795;
	or.b32  	%r17, %r16, %r3;
	mov.b32 	 %f185, %r17;
	bra.uni 	BB3_7;

BB3_4:
	max.f32 	%f88, %f12, %f11;
	min.f32 	%f89, %f12, %f11;
	div.rn.f32 	%f90, %f89, %f88;
	mul.rn.f32 	%f91, %f90, %f90;
	mov.f32 	%f92, 0fC0B59883;
	mov.f32 	%f93, 0fBF52C7EA;
	fma.rn.f32 	%f94, %f91, %f93, %f92;
	mov.f32 	%f95, 0fC0D21907;
	fma.rn.f32 	%f96, %f94, %f91, %f95;
	mul.f32 	%f97, %f91, %f96;
	mul.f32 	%f98, %f90, %f97;
	add.f32 	%f99, %f91, 0f41355DC0;
	mov.f32 	%f100, 0f41E6BD60;
	fma.rn.f32 	%f101, %f99, %f91, %f100;
	mov.f32 	%f102, 0f419D92C8;
	fma.rn.f32 	%f103, %f101, %f91, %f102;
	rcp.rn.f32 	%f104, %f103;
	fma.rn.f32 	%f105, %f98, %f104, %f90;
	mov.f32 	%f106, 0f3FC90FDB;
	sub.f32 	%f107, %f106, %f105;
	setp.gt.f32	%p8, %f12, %f11;
	selp.f32	%f108, %f107, %f105, %p8;
	mov.f32 	%f109, 0f40490FDB;
	sub.f32 	%f110, %f109, %f108;
	setp.lt.s32	%p9, %r2, 0;
	selp.f32	%f111, %f110, %f108, %p9;
	mov.b32 	 %r12, %f111;
	or.b32  	%r13, %r12, %r3;
	mov.b32 	 %f112, %r13;
	add.f32 	%f113, %f11, %f12;
	setp.gtu.f32	%p10, %f113, 0f7F800000;
	selp.f32	%f185, %f113, %f112, %p10;

BB3_7:
	fma.rn.f32 	%f17, %f41, %f7, %f38;
	fma.rn.f32 	%f18, %f42, %f7, %f39;
	fma.rn.f32 	%f19, %f43, %f7, %f40;
	ld.const.u8 	%rs1, [params+248];
	setp.eq.s16	%p11, %rs1, 0;
	@%p11 bra 	BB3_9;

	rcp.rn.f32 	%f115, %f10;
	setp.neu.f32	%p12, %f10, 0f00000000;
	mul.f32 	%f116, %f8, %f115;
	selp.f32	%f117, %f116, 0f3F800000, %p12;
	mul.f32 	%f118, %f9, %f115;
	selp.f32	%f119, %f118, 0f00000000, %p12;
	ld.v4.f32 	{%f120, %f121, %f122, %f123}, [%rd3+32];
	mul.f32 	%f127, %f117, %f120;
	mul.f32 	%f128, %f117, %f121;
	mul.f32 	%f129, %f117, %f122;
	ld.v4.f32 	{%f130, %f131, %f132, %f133}, [%rd3+48];
	fma.rn.f32 	%f137, %f119, %f130, %f127;
	fma.rn.f32 	%f138, %f119, %f131, %f128;
	fma.rn.f32 	%f139, %f119, %f132, %f129;
	ld.f32 	%f140, [%rd3+64];
	mov.f32 	%f141, 0f00000000;
	fma.rn.f32 	%f191, %f141, %f140, %f137;
	ld.f32 	%f142, [%rd3+68];
	fma.rn.f32 	%f190, %f141, %f142, %f138;
	ld.f32 	%f143, [%rd3+72];
	fma.rn.f32 	%f189, %f141, %f143, %f139;
	neg.f32 	%f144, %f119;
	mul.f32 	%f145, %f120, %f144;
	mul.f32 	%f146, %f121, %f144;
	mul.f32 	%f147, %f122, %f144;
	fma.rn.f32 	%f148, %f117, %f130, %f145;
	fma.rn.f32 	%f149, %f117, %f131, %f146;
	fma.rn.f32 	%f150, %f117, %f132, %f147;
	fma.rn.f32 	%f194, %f141, %f140, %f148;
	fma.rn.f32 	%f193, %f141, %f142, %f149;
	fma.rn.f32 	%f192, %f141, %f143, %f150;
	ld.v4.f32 	{%f151, %f152, %f153, %f154}, [%rd3+96];
	mul.f32 	%f158, %f151, 0f00000000;
	mul.f32 	%f159, %f152, 0f00000000;
	mul.f32 	%f160, %f153, 0f00000000;
	ld.v4.f32 	{%f161, %f162, %f163, %f164}, [%rd3+112];
	fma.rn.f32 	%f168, %f141, %f161, %f158;
	fma.rn.f32 	%f169, %f141, %f162, %f159;
	fma.rn.f32 	%f170, %f141, %f163, %f160;
	ld.f32 	%f171, [%rd3+128];
	mov.f32 	%f172, 0f3F800000;
	fma.rn.f32 	%f173, %f172, %f171, %f168;
	ld.f32 	%f174, [%rd3+132];
	fma.rn.f32 	%f175, %f172, %f174, %f169;
	ld.f32 	%f176, [%rd3+136];
	fma.rn.f32 	%f177, %f172, %f176, %f170;
	mul.f32 	%f178, %f173, %f173;
	fma.rn.f32 	%f179, %f175, %f175, %f178;
	fma.rn.f32 	%f180, %f177, %f177, %f179;
	sqrt.rn.f32 	%f181, %f180;
	div.rn.f32 	%f187, %f173, %f181;
	div.rn.f32 	%f186, %f175, %f181;
	div.rn.f32 	%f188, %f177, %f181;

BB3_9:
	cvt.f64.f32	%fd1, %f185;
	div.rn.f64 	%fd2, %fd1, 0d401921FB54442D18;
	cvt.rn.f32.f64	%f182, %fd2;
	ld.u64 	%rd9, [%rd8];
	// inline asm
	call (%r21), _optix_read_primitive_idx, ();
	// inline asm
	ld.const.u64 	%rd10, [params+216];
	cvta.to.global.u64 	%rd11, %rd10;
	cvt.u64.u32	%rd4, %r1;
	mul.wide.u32 	%rd12, %r1, 8;
	add.s64 	%rd13, %rd11, %rd12;
	st.global.u64 	[%rd13], %rd9;
	ld.const.u64 	%rd14, [params+224];
	cvta.to.global.u64 	%rd15, %rd14;
	mul.wide.u32 	%rd16, %r1, 4;
	add.s64 	%rd17, %rd15, %rd16;
	st.global.u32 	[%rd17], %r21;
	ld.const.u64 	%rd18, [params+80];
	cvta.to.global.u64 	%rd19, %rd18;
	add.s64 	%rd20, %rd19, %rd16;
	st.global.f32 	[%rd20], %f10;
	ld.const.u64 	%rd21, [params+88];
	cvta.to.global.u64 	%rd22, %rd21;
	add.s64 	%rd23, %rd22, %rd16;
	add.f32 	%f183, %f182, 0f3F800000;
	setp.lt.f32	%p13, %f182, 0f00000000;
	selp.f32	%f184, %f183, %f182, %p13;
	st.global.f32 	[%rd23], %f184;
	ld.const.u64 	%rd24, [params+144];
	cvta.to.global.u64 	%rd25, %rd24;
	add.s64 	%rd26, %rd25, %rd16;
	st.global.f32 	[%rd26], %f17;
	ld.const.u64 	%rd27, [params+152];
	cvta.to.global.u64 	%rd28, %rd27;
	add.s64 	%rd29, %rd28, %rd16;
	st.global.f32 	[%rd29], %f18;
	ld.const.u64 	%rd30, [params+160];
	cvta.to.global.u64 	%rd31, %rd30;
	add.s64 	%rd32, %rd31, %rd16;
	st.global.f32 	[%rd32], %f19;
	@%p11 bra 	BB3_11;

	ld.const.u64 	%rd33, [params+96];
	cvta.to.global.u64 	%rd34, %rd33;
	shl.b64 	%rd35, %rd4, 2;
	add.s64 	%rd36, %rd34, %rd35;
	st.global.f32 	[%rd36], %f187;
	ld.const.u64 	%rd37, [params+104];
	cvta.to.global.u64 	%rd38, %rd37;
	add.s64 	%rd39, %rd38, %rd35;
	st.global.f32 	[%rd39], %f186;
	ld.const.u64 	%rd40, [params+112];
	cvta.to.global.u64 	%rd41, %rd40;
	add.s64 	%rd42, %rd41, %rd35;
	st.global.f32 	[%rd42], %f188;
	ld.const.u64 	%rd43, [params+120];
	cvta.to.global.u64 	%rd44, %rd43;
	add.s64 	%rd45, %rd44, %rd35;
	st.global.f32 	[%rd45], %f187;
	ld.const.u64 	%rd46, [params+128];
	cvta.to.global.u64 	%rd47, %rd46;
	add.s64 	%rd48, %rd47, %rd35;
	st.global.f32 	[%rd48], %f186;
	ld.const.u64 	%rd49, [params+136];
	cvta.to.global.u64 	%rd50, %rd49;
	add.s64 	%rd51, %rd50, %rd35;
	st.global.f32 	[%rd51], %f188;
	ld.const.u64 	%rd52, [params+168];
	cvta.to.global.u64 	%rd53, %rd52;
	add.s64 	%rd54, %rd53, %rd35;
	st.global.f32 	[%rd54], %f191;
	ld.const.u64 	%rd55, [params+176];
	cvta.to.global.u64 	%rd56, %rd55;
	add.s64 	%rd57, %rd56, %rd35;
	st.global.f32 	[%rd57], %f190;
	ld.const.u64 	%rd58, [params+184];
	cvta.to.global.u64 	%rd59, %rd58;
	add.s64 	%rd60, %rd59, %rd35;
	st.global.f32 	[%rd60], %f189;
	ld.const.u64 	%rd61, [params+192];
	cvta.to.global.u64 	%rd62, %rd61;
	add.s64 	%rd63, %rd62, %rd35;
	st.global.f32 	[%rd63], %f194;
	ld.const.u64 	%rd64, [params+200];
	cvta.to.global.u64 	%rd65, %rd64;
	add.s64 	%rd66, %rd65, %rd35;
	st.global.f32 	[%rd66], %f193;
	ld.const.u64 	%rd67, [params+208];
	cvta.to.global.u64 	%rd68, %rd67;
	add.s64 	%rd69, %rd68, %rd35;
	st.global.f32 	[%rd69], %f192;

BB3_11:
	ld.const.u64 	%rd70, [params+72];
	cvta.to.global.u64 	%rd71, %rd70;
	shl.b64 	%rd72, %rd4, 2;
	add.s64 	%rd73, %rd71, %rd72;
	st.global.f32 	[%rd73], %f7;

BB3_12:
	ret;
}

	// .globl	__closesthit__mesh
.visible .entry __closesthit__mesh(

)
{
	.reg .pred 	%p<7>;
	.reg .b16 	%rs<3>;
	.reg .f32 	%f<193>;
	.reg .b32 	%r<17>;
	.reg .b64 	%rd<105>;


	// inline asm
	call (%r3), _optix_get_launch_dimension_x, ();
	// inline asm
	// inline asm
	call (%r4), _optix_get_launch_dimension_y, ();
	// inline asm
	// inline asm
	call (%r6), _optix_get_launch_index_x, ();
	// inline asm
	// inline asm
	call (%r7), _optix_get_launch_index_y, ();
	// inline asm
	// inline asm
	call (%r8), _optix_get_launch_index_z, ();
	// inline asm
	mad.lo.s32 	%r9, %r8, %r4, %r7;
	mad.lo.s32 	%r1, %r9, %r3, %r6;
	ld.const.u64 	%rd1, [params+232];
	setp.eq.s64	%p1, %rd1, 0;
	@%p1 bra 	BB4_2;

	cvta.to.global.u64 	%rd13, %rd1;
	cvt.u64.u32	%rd14, %r1;
	add.s64 	%rd15, %rd13, %rd14;
	mov.u16 	%rs2, 1;
	st.global.u8 	[%rd15], %rs2;
	bra.uni 	BB4_12;

BB4_2:
	// inline asm
	call (%rd16), _optix_get_sbt_data_ptr_64, ();
	// inline asm
	ld.u64 	%rd3, [%rd16+8];
	// inline asm
	call (%f191, %f192), _optix_get_triangle_barycentrics, ();
	// inline asm
	mov.f32 	%f78, 0f3F800000;
	sub.f32 	%f79, %f78, %f191;
	sub.f32 	%f3, %f79, %f192;
	ld.u64 	%rd17, [%rd3];
	// inline asm
	call (%r10), _optix_read_primitive_idx, ();
	// inline asm
	mul.wide.u32 	%rd18, %r10, 3;
	shl.b64 	%rd19, %rd18, 2;
	add.s64 	%rd20, %rd17, %rd19;
	ld.u32 	%r11, [%rd20];
	cvt.u64.u32	%rd4, %r11;
	mul.wide.u32 	%rd5, %r11, 3;
	ld.u64 	%rd21, [%rd3+8];
	shl.b64 	%rd22, %rd5, 2;
	add.s64 	%rd23, %rd21, %rd22;
	ld.u32 	%r12, [%rd20+4];
	cvt.u64.u32	%rd6, %r12;
	mul.wide.u32 	%rd7, %r12, 3;
	shl.b64 	%rd24, %rd7, 2;
	add.s64 	%rd25, %rd21, %rd24;
	ld.u32 	%r13, [%rd20+8];
	cvt.u64.u32	%rd8, %r13;
	mul.wide.u32 	%rd9, %r13, 3;
	shl.b64 	%rd26, %rd9, 2;
	add.s64 	%rd27, %rd21, %rd26;
	ld.f32 	%f4, [%rd23];
	ld.f32 	%f5, [%rd23+4];
	ld.f32 	%f6, [%rd23+8];
	ld.f32 	%f7, [%rd25];
	mul.f32 	%f80, %f7, %f191;
	ld.f32 	%f8, [%rd25+4];
	mul.f32 	%f81, %f8, %f191;
	ld.f32 	%f9, [%rd25+8];
	mul.f32 	%f82, %f9, %f191;
	fma.rn.f32 	%f83, %f4, %f3, %f80;
	fma.rn.f32 	%f84, %f5, %f3, %f81;
	fma.rn.f32 	%f85, %f6, %f3, %f82;
	ld.f32 	%f10, [%rd27];
	ld.f32 	%f11, [%rd27+4];
	ld.f32 	%f12, [%rd27+8];
	fma.rn.f32 	%f13, %f10, %f192, %f83;
	fma.rn.f32 	%f14, %f11, %f192, %f84;
	fma.rn.f32 	%f15, %f12, %f192, %f85;
	ld.const.u8 	%rs1, [params+248];
	setp.eq.s16	%p2, %rs1, 0;
	@%p2 bra 	BB4_9;

	sub.f32 	%f16, %f7, %f4;
	sub.f32 	%f17, %f12, %f6;
	sub.f32 	%f18, %f8, %f5;
	mul.f32 	%f86, %f18, %f17;
	sub.f32 	%f19, %f11, %f5;
	sub.f32 	%f20, %f9, %f6;
	mul.f32 	%f87, %f20, %f19;
	sub.f32 	%f88, %f86, %f87;
	sub.f32 	%f21, %f10, %f4;
	mul.f32 	%f89, %f20, %f21;
	mul.f32 	%f90, %f16, %f17;
	sub.f32 	%f91, %f89, %f90;
	mul.f32 	%f92, %f16, %f19;
	mul.f32 	%f93, %f18, %f21;
	sub.f32 	%f94, %f92, %f93;
	mul.f32 	%f95, %f88, %f88;
	fma.rn.f32 	%f96, %f91, %f91, %f95;
	fma.rn.f32 	%f97, %f94, %f94, %f96;
	sqrt.rn.f32 	%f98, %f97;
	div.rn.f32 	%f188, %f88, %f98;
	div.rn.f32 	%f189, %f91, %f98;
	div.rn.f32 	%f190, %f94, %f98;
	mov.b32 	 %r14, %f190;
	and.b32  	%r15, %r14, -2147483648;
	or.b32  	%r16, %r15, 1065353216;
	mov.b32 	 %f25, %r16;
	add.f32 	%f99, %f190, %f25;
	mov.f32 	%f100, 0fBF800000;
	div.rn.f32 	%f101, %f100, %f99;
	mul.f32 	%f102, %f188, %f189;
	mul.f32 	%f179, %f102, %f101;
	mul.f32 	%f103, %f188, %f188;
	mul.f32 	%f104, %f103, %f101;
	fma.rn.f32 	%f182, %f104, %f25, 0f3F800000;
	mul.f32 	%f105, %f189, %f189;
	fma.rn.f32 	%f180, %f105, %f101, %f25;
	ld.u64 	%rd10, [%rd3+16];
	setp.eq.s64	%p3, %rd10, 0;
	@%p3 bra 	BB4_5;

	add.s64 	%rd29, %rd10, %rd22;
	add.s64 	%rd31, %rd10, %rd24;
	add.s64 	%rd33, %rd10, %rd26;
	ld.f32 	%f106, [%rd29];
	ld.f32 	%f107, [%rd29+4];
	ld.f32 	%f108, [%rd29+8];
	ld.f32 	%f109, [%rd31];
	mul.f32 	%f110, %f109, %f191;
	ld.f32 	%f111, [%rd31+4];
	mul.f32 	%f112, %f111, %f191;
	ld.f32 	%f113, [%rd31+8];
	mul.f32 	%f114, %f113, %f191;
	fma.rn.f32 	%f115, %f106, %f3, %f110;
	fma.rn.f32 	%f116, %f107, %f3, %f112;
	fma.rn.f32 	%f117, %f108, %f3, %f114;
	ld.f32 	%f118, [%rd33];
	ld.f32 	%f119, [%rd33+4];
	ld.f32 	%f120, [%rd33+8];
	fma.rn.f32 	%f121, %f118, %f192, %f115;
	fma.rn.f32 	%f122, %f119, %f192, %f116;
	fma.rn.f32 	%f123, %f120, %f192, %f117;
	mul.f32 	%f124, %f121, %f121;
	fma.rn.f32 	%f125, %f122, %f122, %f124;
	fma.rn.f32 	%f126, %f123, %f123, %f125;
	sqrt.rn.f32 	%f127, %f126;
	div.rn.f32 	%f185, %f121, %f127;
	div.rn.f32 	%f186, %f122, %f127;
	div.rn.f32 	%f187, %f123, %f127;
	bra.uni 	BB4_6;

BB4_5:
	mov.f32 	%f185, %f188;
	mov.f32 	%f186, %f189;
	mov.f32 	%f187, %f190;

BB4_6:
	mul.f32 	%f183, %f179, %f25;
	mul.f32 	%f128, %f188, %f25;
	neg.f32 	%f184, %f128;
	neg.f32 	%f181, %f189;
	ld.u64 	%rd11, [%rd3+24];
	setp.eq.s64	%p4, %rd11, 0;
	@%p4 bra 	BB4_9;

	shl.b64 	%rd34, %rd4, 3;
	add.s64 	%rd35, %rd11, %rd34;
	shl.b64 	%rd36, %rd6, 3;
	add.s64 	%rd37, %rd11, %rd36;
	shl.b64 	%rd38, %rd8, 3;
	add.s64 	%rd39, %rd11, %rd38;
	ld.f32 	%f129, [%rd35];
	ld.f32 	%f130, [%rd35+4];
	ld.f32 	%f131, [%rd37];
	mul.f32 	%f132, %f131, %f191;
	ld.f32 	%f133, [%rd37+4];
	mul.f32 	%f134, %f133, %f191;
	fma.rn.f32 	%f135, %f129, %f3, %f132;
	fma.rn.f32 	%f136, %f130, %f3, %f134;
	ld.f32 	%f137, [%rd39];
	ld.f32 	%f138, [%rd39+4];
	fma.rn.f32 	%f191, %f137, %f192, %f135;
	fma.rn.f32 	%f192, %f138, %f192, %f136;
	sub.f32 	%f49, %f131, %f129;
	sub.f32 	%f50, %f133, %f130;
	sub.f32 	%f51, %f137, %f129;
	sub.f32 	%f52, %f138, %f130;
	mul.f32 	%f139, %f49, %f52;
	mul.f32 	%f140, %f50, %f51;
	sub.f32 	%f53, %f139, %f140;
	setp.eq.f32	%p5, %f53, 0f00000000;
	@%p5 bra 	BB4_9;

	rcp.rn.f32 	%f141, %f53;
	mul.f32 	%f142, %f50, %f21;
	mul.f32 	%f143, %f52, %f16;
	sub.f32 	%f144, %f143, %f142;
	mul.f32 	%f145, %f50, %f19;
	mul.f32 	%f146, %f52, %f18;
	sub.f32 	%f147, %f146, %f145;
	mul.f32 	%f148, %f50, %f17;
	mul.f32 	%f149, %f52, %f20;
	sub.f32 	%f150, %f149, %f148;
	mul.f32 	%f182, %f144, %f141;
	mul.f32 	%f183, %f147, %f141;
	mul.f32 	%f184, %f150, %f141;
	mul.f32 	%f151, %f16, %f51;
	mul.f32 	%f152, %f18, %f51;
	mul.f32 	%f153, %f20, %f51;
	mul.f32 	%f154, %f49, %f21;
	sub.f32 	%f155, %f154, %f151;
	mul.f32 	%f156, %f49, %f19;
	sub.f32 	%f157, %f156, %f152;
	mul.f32 	%f158, %f49, %f17;
	sub.f32 	%f159, %f158, %f153;
	mul.f32 	%f179, %f155, %f141;
	mul.f32 	%f180, %f157, %f141;
	mul.f32 	%f181, %f159, %f141;

BB4_9:
	// inline asm
	call (%f160), _optix_get_world_ray_origin_x, ();
	// inline asm
	// inline asm
	call (%f161), _optix_get_world_ray_origin_y, ();
	// inline asm
	// inline asm
	call (%f162), _optix_get_world_ray_origin_z, ();
	// inline asm
	// inline asm
	call (%f163), _optix_get_world_ray_direction_x, ();
	// inline asm
	// inline asm
	call (%f164), _optix_get_world_ray_direction_y, ();
	// inline asm
	// inline asm
	call (%f165), _optix_get_world_ray_direction_z, ();
	// inline asm
	sub.f32 	%f166, %f13, %f160;
	sub.f32 	%f167, %f14, %f161;
	sub.f32 	%f168, %f15, %f162;
	mul.f32 	%f169, %f166, %f166;
	fma.rn.f32 	%f170, %f167, %f167, %f169;
	fma.rn.f32 	%f171, %f168, %f168, %f170;
	mul.f32 	%f172, %f163, %f163;
	fma.rn.f32 	%f173, %f164, %f164, %f172;
	fma.rn.f32 	%f174, %f165, %f165, %f173;
	div.rn.f32 	%f175, %f171, %f174;
	sqrt.rn.f32 	%f74, %f175;
	ld.u64 	%rd40, [%rd16];
	ld.const.u64 	%rd41, [params+216];
	cvta.to.global.u64 	%rd42, %rd41;
	cvt.u64.u32	%rd12, %r1;
	mul.wide.u32 	%rd43, %r1, 8;
	add.s64 	%rd44, %rd42, %rd43;
	st.global.u64 	[%rd44], %rd40;
	ld.const.u64 	%rd45, [params+224];
	cvta.to.global.u64 	%rd46, %rd45;
	mul.wide.u32 	%rd47, %r1, 4;
	add.s64 	%rd48, %rd46, %rd47;
	st.global.u32 	[%rd48], %r10;
	ld.const.u64 	%rd49, [params+80];
	cvta.to.global.u64 	%rd50, %rd49;
	add.s64 	%rd51, %rd50, %rd47;
	st.global.f32 	[%rd51], %f191;
	ld.const.u64 	%rd52, [params+88];
	cvta.to.global.u64 	%rd53, %rd52;
	add.s64 	%rd54, %rd53, %rd47;
	st.global.f32 	[%rd54], %f192;
	ld.const.u64 	%rd55, [params+144];
	cvta.to.global.u64 	%rd56, %rd55;
	add.s64 	%rd57, %rd56, %rd47;
	st.global.f32 	[%rd57], %f13;
	ld.const.u64 	%rd58, [params+152];
	cvta.to.global.u64 	%rd59, %rd58;
	add.s64 	%rd60, %rd59, %rd47;
	st.global.f32 	[%rd60], %f14;
	ld.const.u64 	%rd61, [params+160];
	cvta.to.global.u64 	%rd62, %rd61;
	add.s64 	%rd63, %rd62, %rd47;
	st.global.f32 	[%rd63], %f15;
	@%p2 bra 	BB4_11;

	ld.const.u64 	%rd64, [params+96];
	cvta.to.global.u64 	%rd65, %rd64;
	shl.b64 	%rd66, %rd12, 2;
	add.s64 	%rd67, %rd65, %rd66;
	st.global.f32 	[%rd67], %f188;
	ld.const.u64 	%rd68, [params+104];
	cvta.to.global.u64 	%rd69, %rd68;
	add.s64 	%rd70, %rd69, %rd66;
	st.global.f32 	[%rd70], %f189;
	ld.const.u64 	%rd71, [params+112];
	cvta.to.global.u64 	%rd72, %rd71;
	add.s64 	%rd73, %rd72, %rd66;
	st.global.f32 	[%rd73], %f190;
	ld.const.u64 	%rd74, [params+120];
	cvta.to.global.u64 	%rd75, %rd74;
	add.s64 	%rd76, %rd75, %rd66;
	st.global.f32 	[%rd76], %f185;
	ld.const.u64 	%rd77, [params+128];
	cvta.to.global.u64 	%rd78, %rd77;
	add.s64 	%rd79, %rd78, %rd66;
	st.global.f32 	[%rd79], %f186;
	ld.const.u64 	%rd80, [params+136];
	cvta.to.global.u64 	%rd81, %rd80;
	add.s64 	%rd82, %rd81, %rd66;
	st.global.f32 	[%rd82], %f187;
	ld.const.u64 	%rd83, [params+168];
	cvta.to.global.u64 	%rd84, %rd83;
	add.s64 	%rd85, %rd84, %rd66;
	st.global.f32 	[%rd85], %f182;
	ld.const.u64 	%rd86, [params+176];
	cvta.to.global.u64 	%rd87, %rd86;
	add.s64 	%rd88, %rd87, %rd66;
	st.global.f32 	[%rd88], %f183;
	ld.const.u64 	%rd89, [params+184];
	cvta.to.global.u64 	%rd90, %rd89;
	add.s64 	%rd91, %rd90, %rd66;
	st.global.f32 	[%rd91], %f184;
	ld.const.u64 	%rd92, [params+192];
	cvta.to.global.u64 	%rd93, %rd92;
	add.s64 	%rd94, %rd93, %rd66;
	st.global.f32 	[%rd94], %f179;
	ld.const.u64 	%rd95, [params+200];
	cvta.to.global.u64 	%rd96, %rd95;
	add.s64 	%rd97, %rd96, %rd66;
	st.global.f32 	[%rd97], %f180;
	ld.const.u64 	%rd98, [params+208];
	cvta.to.global.u64 	%rd99, %rd98;
	add.s64 	%rd100, %rd99, %rd66;
	st.global.f32 	[%rd100], %f181;

BB4_11:
	ld.const.u64 	%rd101, [params+72];
	cvta.to.global.u64 	%rd102, %rd101;
	shl.b64 	%rd103, %rd12, 2;
	add.s64 	%rd104, %rd102, %rd103;
	st.global.f32 	[%rd104], %f74;

BB4_12:
	ret;
}

	// .globl	__intersection__rectangle
.visible .entry __intersection__rectangle(

)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<55>;
	.reg .b32 	%r<3>;
	.reg .b64 	%rd<3>;


	// inline asm
	call (%rd1), _optix_get_sbt_data_ptr_64, ();
	// inline asm
	ld.u64 	%rd2, [%rd1+8];
	// inline asm
	call (%f3), _optix_get_world_ray_origin_x, ();
	// inline asm
	// inline asm
	call (%f4), _optix_get_world_ray_origin_y, ();
	// inline asm
	// inline asm
	call (%f5), _optix_get_world_ray_origin_z, ();
	// inline asm
	// inline asm
	call (%f6), _optix_get_world_ray_direction_x, ();
	// inline asm
	// inline asm
	call (%f7), _optix_get_world_ray_direction_y, ();
	// inline asm
	// inline asm
	call (%f8), _optix_get_world_ray_direction_z, ();
	// inline asm
	ld.v4.f32 	{%f9, %f10, %f11, %f12}, [%rd2+80];
	ld.f32 	%f16, [%rd2+32];
	fma.rn.f32 	%f17, %f3, %f16, %f9;
	ld.f32 	%f18, [%rd2+36];
	fma.rn.f32 	%f19, %f3, %f18, %f10;
	ld.f32 	%f20, [%rd2+40];
	fma.rn.f32 	%f21, %f3, %f20, %f11;
	ld.f32 	%f22, [%rd2+48];
	fma.rn.f32 	%f23, %f4, %f22, %f17;
	ld.f32 	%f24, [%rd2+52];
	fma.rn.f32 	%f25, %f4, %f24, %f19;
	ld.f32 	%f26, [%rd2+56];
	fma.rn.f32 	%f27, %f4, %f26, %f21;
	ld.f32 	%f28, [%rd2+64];
	fma.rn.f32 	%f29, %f5, %f28, %f23;
	ld.f32 	%f30, [%rd2+68];
	fma.rn.f32 	%f31, %f5, %f30, %f25;
	ld.f32 	%f32, [%rd2+72];
	fma.rn.f32 	%f33, %f5, %f32, %f27;
	ld.v4.f32 	{%f34, %f35, %f36, %f37}, [%rd2+32];
	mul.f32 	%f41, %f6, %f34;
	mul.f32 	%f42, %f6, %f35;
	mul.f32 	%f43, %f6, %f36;
	fma.rn.f32 	%f44, %f7, %f22, %f41;
	fma.rn.f32 	%f45, %f7, %f24, %f42;
	fma.rn.f32 	%f46, %f7, %f26, %f43;
	fma.rn.f32 	%f47, %f8, %f28, %f44;
	fma.rn.f32 	%f48, %f8, %f30, %f45;
	fma.rn.f32 	%f49, %f8, %f32, %f46;
	neg.f32 	%f50, %f33;
	div.rn.f32 	%f1, %f50, %f49;
	fma.rn.f32 	%f51, %f1, %f47, %f29;
	fma.rn.f32 	%f2, %f1, %f48, %f31;
	abs.f32 	%f52, %f51;
	setp.gtu.f32	%p1, %f52, 0f3F800000;
	@%p1 bra 	BB5_3;

	abs.f32 	%f53, %f2;
	setp.gtu.f32	%p2, %f53, 0f3F800000;
	@%p2 bra 	BB5_3;

	mov.u32 	%r2, 254;
	// inline asm
	call (%r1), _optix_report_intersection_0, (%f1, %r2);
	// inline asm

BB5_3:
	ret;
}

	// .globl	__closesthit__rectangle
.visible .entry __closesthit__rectangle(

)
{
	.reg .pred 	%p<3>;
	.reg .b16 	%rs<3>;
	.reg .f32 	%f<81>;
	.reg .b32 	%r<10>;
	.reg .b64 	%rd<72>;


	// inline asm
	call (%r1), _optix_get_launch_dimension_x, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_launch_dimension_y, ();
	// inline asm
	// inline asm
	call (%r4), _optix_get_launch_index_x, ();
	// inline asm
	// inline asm
	call (%r5), _optix_get_launch_index_y, ();
	// inline asm
	// inline asm
	call (%r6), _optix_get_launch_index_z, ();
	// inline asm
	mad.lo.s32 	%r7, %r6, %r2, %r5;
	mad.lo.s32 	%r8, %r7, %r1, %r4;
	ld.const.u64 	%rd1, [params+232];
	setp.eq.s64	%p1, %rd1, 0;
	cvt.u64.u32	%rd2, %r8;
	@%p1 bra 	BB6_2;

	cvta.to.global.u64 	%rd3, %rd1;
	add.s64 	%rd4, %rd3, %rd2;
	mov.u16 	%rs1, 1;
	st.global.u8 	[%rd4], %rs1;
	bra.uni 	BB6_5;

BB6_2:
	// inline asm
	call (%rd5), _optix_get_sbt_data_ptr_64, ();
	// inline asm
	ld.u64 	%rd6, [%rd5+8];
	ld.v4.f32 	{%f20, %f21, %f22, %f23}, [%rd6+160];
	ld.v4.f32 	{%f24, %f25, %f26, %f27}, [%rd6+176];
	ld.v4.f32 	{%f28, %f29, %f30, %f31}, [%rd6+192];
	// inline asm
	call (%f14), _optix_get_world_ray_origin_x, ();
	// inline asm
	// inline asm
	call (%f15), _optix_get_world_ray_origin_y, ();
	// inline asm
	// inline asm
	call (%f16), _optix_get_world_ray_origin_z, ();
	// inline asm
	// inline asm
	call (%f17), _optix_get_world_ray_direction_x, ();
	// inline asm
	// inline asm
	call (%f18), _optix_get_world_ray_direction_y, ();
	// inline asm
	// inline asm
	call (%f19), _optix_get_world_ray_direction_z, ();
	// inline asm
	ld.v4.f32 	{%f32, %f33, %f34, %f35}, [%rd6+80];
	ld.f32 	%f39, [%rd6+32];
	fma.rn.f32 	%f40, %f14, %f39, %f32;
	ld.f32 	%f41, [%rd6+36];
	fma.rn.f32 	%f42, %f14, %f41, %f33;
	ld.f32 	%f43, [%rd6+40];
	fma.rn.f32 	%f44, %f14, %f43, %f34;
	ld.f32 	%f45, [%rd6+48];
	fma.rn.f32 	%f46, %f15, %f45, %f40;
	ld.f32 	%f47, [%rd6+52];
	fma.rn.f32 	%f48, %f15, %f47, %f42;
	ld.f32 	%f49, [%rd6+56];
	fma.rn.f32 	%f50, %f15, %f49, %f44;
	ld.f32 	%f51, [%rd6+64];
	fma.rn.f32 	%f52, %f16, %f51, %f46;
	ld.f32 	%f53, [%rd6+68];
	fma.rn.f32 	%f54, %f16, %f53, %f48;
	ld.f32 	%f55, [%rd6+72];
	fma.rn.f32 	%f56, %f16, %f55, %f50;
	ld.v4.f32 	{%f57, %f58, %f59, %f60}, [%rd6+32];
	mul.f32 	%f64, %f17, %f57;
	mul.f32 	%f65, %f17, %f58;
	mul.f32 	%f66, %f17, %f59;
	fma.rn.f32 	%f67, %f18, %f45, %f64;
	fma.rn.f32 	%f68, %f18, %f47, %f65;
	fma.rn.f32 	%f69, %f18, %f49, %f66;
	fma.rn.f32 	%f70, %f19, %f51, %f67;
	fma.rn.f32 	%f71, %f19, %f53, %f68;
	fma.rn.f32 	%f72, %f19, %f55, %f69;
	neg.f32 	%f73, %f56;
	div.rn.f32 	%f13, %f73, %f72;
	fma.rn.f32 	%f74, %f17, %f13, %f14;
	fma.rn.f32 	%f75, %f18, %f13, %f15;
	fma.rn.f32 	%f76, %f19, %f13, %f16;
	fma.rn.f32 	%f77, %f13, %f70, %f52;
	fma.rn.f32 	%f78, %f13, %f71, %f54;
	fma.rn.f32 	%f79, %f77, 0f3F000000, 0f3F000000;
	fma.rn.f32 	%f80, %f78, 0f3F000000, 0f3F000000;
	ld.u64 	%rd7, [%rd5];
	// inline asm
	call (%r9), _optix_read_primitive_idx, ();
	// inline asm
	ld.const.u64 	%rd8, [params+216];
	cvta.to.global.u64 	%rd9, %rd8;
	shl.b64 	%rd10, %rd2, 3;
	add.s64 	%rd11, %rd9, %rd10;
	st.global.u64 	[%rd11], %rd7;
	ld.const.u64 	%rd12, [params+224];
	cvta.to.global.u64 	%rd13, %rd12;
	shl.b64 	%rd14, %rd2, 2;
	add.s64 	%rd15, %rd13, %rd14;
	st.global.u32 	[%rd15], %r9;
	ld.const.u64 	%rd16, [params+80];
	cvta.to.global.u64 	%rd17, %rd16;
	add.s64 	%rd18, %rd17, %rd14;
	st.global.f32 	[%rd18], %f79;
	ld.const.u64 	%rd19, [params+88];
	cvta.to.global.u64 	%rd20, %rd19;
	add.s64 	%rd21, %rd20, %rd14;
	st.global.f32 	[%rd21], %f80;
	ld.const.u64 	%rd22, [params+144];
	cvta.to.global.u64 	%rd23, %rd22;
	add.s64 	%rd24, %rd23, %rd14;
	st.global.f32 	[%rd24], %f74;
	ld.const.u64 	%rd25, [params+152];
	cvta.to.global.u64 	%rd26, %rd25;
	add.s64 	%rd27, %rd26, %rd14;
	st.global.f32 	[%rd27], %f75;
	ld.const.u64 	%rd28, [params+160];
	cvta.to.global.u64 	%rd29, %rd28;
	add.s64 	%rd30, %rd29, %rd14;
	st.global.f32 	[%rd30], %f76;
	ld.const.u8 	%rs2, [params+248];
	setp.eq.s16	%p2, %rs2, 0;
	@%p2 bra 	BB6_4;

	ld.const.u64 	%rd31, [params+96];
	cvta.to.global.u64 	%rd32, %rd31;
	add.s64 	%rd34, %rd32, %rd14;
	st.global.f32 	[%rd34], %f20;
	ld.const.u64 	%rd35, [params+104];
	cvta.to.global.u64 	%rd36, %rd35;
	add.s64 	%rd37, %rd36, %rd14;
	st.global.f32 	[%rd37], %f21;
	ld.const.u64 	%rd38, [params+112];
	cvta.to.global.u64 	%rd39, %rd38;
	add.s64 	%rd40, %rd39, %rd14;
	st.global.f32 	[%rd40], %f22;
	ld.const.u64 	%rd41, [params+120];
	cvta.to.global.u64 	%rd42, %rd41;
	add.s64 	%rd43, %rd42, %rd14;
	st.global.f32 	[%rd43], %f20;
	ld.const.u64 	%rd44, [params+128];
	cvta.to.global.u64 	%rd45, %rd44;
	add.s64 	%rd46, %rd45, %rd14;
	st.global.f32 	[%rd46], %f21;
	ld.const.u64 	%rd47, [params+136];
	cvta.to.global.u64 	%rd48, %rd47;
	add.s64 	%rd49, %rd48, %rd14;
	st.global.f32 	[%rd49], %f22;
	ld.const.u64 	%rd50, [params+168];
	cvta.to.global.u64 	%rd51, %rd50;
	add.s64 	%rd52, %rd51, %rd14;
	st.global.f32 	[%rd52], %f24;
	ld.const.u64 	%rd53, [params+176];
	cvta.to.global.u64 	%rd54, %rd53;
	add.s64 	%rd55, %rd54, %rd14;
	st.global.f32 	[%rd55], %f25;
	ld.const.u64 	%rd56, [params+184];
	cvta.to.global.u64 	%rd57, %rd56;
	add.s64 	%rd58, %rd57, %rd14;
	st.global.f32 	[%rd58], %f26;
	ld.const.u64 	%rd59, [params+192];
	cvta.to.global.u64 	%rd60, %rd59;
	add.s64 	%rd61, %rd60, %rd14;
	st.global.f32 	[%rd61], %f28;
	ld.const.u64 	%rd62, [params+200];
	cvta.to.global.u64 	%rd63, %rd62;
	add.s64 	%rd64, %rd63, %rd14;
	st.global.f32 	[%rd64], %f29;
	ld.const.u64 	%rd65, [params+208];
	cvta.to.global.u64 	%rd66, %rd65;
	add.s64 	%rd67, %rd66, %rd14;
	st.global.f32 	[%rd67], %f30;

BB6_4:
	ld.const.u64 	%rd68, [params+72];
	cvta.to.global.u64 	%rd69, %rd68;
	add.s64 	%rd71, %rd69, %rd14;
	st.global.f32 	[%rd71], %f13;

BB6_5:
	ret;
}

	// .globl	__intersection__sphere
.visible .entry __intersection__sphere(

)
{
	.reg .pred 	%p<22>;
	.reg .f32 	%f<52>;
	.reg .b32 	%r<8>;
	.reg .b64 	%rd<3>;


	// inline asm
	call (%rd1), _optix_get_sbt_data_ptr_64, ();
	// inline asm
	ld.u64 	%rd2, [%rd1+8];
	// inline asm
	call (%f13), _optix_get_ray_tmin, ();
	// inline asm
	// inline asm
	call (%f14), _optix_get_ray_tmax, ();
	// inline asm
	// inline asm
	call (%f15), _optix_get_world_ray_origin_x, ();
	// inline asm
	// inline asm
	call (%f16), _optix_get_world_ray_origin_y, ();
	// inline asm
	// inline asm
	call (%f17), _optix_get_world_ray_origin_z, ();
	// inline asm
	// inline asm
	call (%f18), _optix_get_world_ray_direction_x, ();
	// inline asm
	// inline asm
	call (%f19), _optix_get_world_ray_direction_y, ();
	// inline asm
	// inline asm
	call (%f20), _optix_get_world_ray_direction_z, ();
	// inline asm
	ld.f32 	%f22, [%rd2+288];
	sub.f32 	%f23, %f15, %f22;
	ld.f32 	%f24, [%rd2+292];
	sub.f32 	%f25, %f16, %f24;
	ld.f32 	%f26, [%rd2+296];
	sub.f32 	%f27, %f17, %f26;
	mul.f32 	%f28, %f18, %f18;
	fma.rn.f32 	%f29, %f19, %f19, %f28;
	fma.rn.f32 	%f3, %f20, %f20, %f29;
	mul.f32 	%f30, %f23, %f18;
	fma.rn.f32 	%f31, %f25, %f19, %f30;
	fma.rn.f32 	%f32, %f27, %f20, %f31;
	add.f32 	%f4, %f32, %f32;
	mul.f32 	%f33, %f23, %f23;
	fma.rn.f32 	%f34, %f25, %f25, %f33;
	fma.rn.f32 	%f35, %f27, %f27, %f34;
	ld.f32 	%f36, [%rd2+304];
	mul.f32 	%f37, %f36, %f36;
	sub.f32 	%f5, %f35, %f37;
	setp.eq.f32	%p3, %f3, 0f00000000;
	setp.le.f32	%p4, %f4, 0f00000000;
	and.pred  	%p5, %p3, %p4;
	mov.pred 	%p21, 0;
	@%p5 bra 	BB7_4;

	neg.f32 	%f38, %f5;
	div.rn.f32 	%f51, %f38, %f4;
	mul.f32 	%f39, %f3, 0fC0800000;
	mul.f32 	%f40, %f39, %f5;
	fma.rn.f32 	%f7, %f4, %f4, %f40;
	setp.lt.f32	%p7, %f7, 0f00000000;
	setp.neu.f32	%p8, %f3, 0f00000000;
	and.pred  	%p9, %p7, %p8;
	@%p9 bra 	BB7_2;
	bra.uni 	BB7_3;

BB7_2:
	mov.f32 	%f50, %f51;
	bra.uni 	BB7_4;

BB7_3:
	mov.b32 	 %r1, %f4;
	and.b32  	%r2, %r1, -2147483648;
	sqrt.rn.f32 	%f41, %f7;
	mov.b32 	 %r3, %f41;
	and.b32  	%r4, %r3, 2147483647;
	or.b32  	%r5, %r4, %r2;
	mov.b32 	 %f42, %r5;
	add.f32 	%f43, %f4, %f42;
	mul.f32 	%f44, %f43, 0fBF000000;
	div.rn.f32 	%f45, %f44, %f3;
	div.rn.f32 	%f46, %f5, %f44;
	min.f32 	%f47, %f45, %f46;
	max.f32 	%f48, %f45, %f46;
	selp.f32	%f50, %f51, %f47, %p3;
	selp.f32	%f51, %f51, %f48, %p3;
	mov.pred 	%p21, -1;

BB7_4:
	setp.le.f32	%p12, %f50, %f14;
	setp.ge.f32	%p13, %f51, %f13;
	and.pred  	%p14, %p12, %p13;
	setp.lt.f32	%p15, %f50, %f13;
	setp.geu.f32	%p16, %f50, %f13;
	setp.leu.f32	%p17, %f51, %f14;
	or.pred  	%p18, %p17, %p16;
	selp.f32	%f12, %f51, %f50, %p15;
	and.pred  	%p19, %p21, %p14;
	and.pred  	%p20, %p19, %p18;
	@!%p20 bra 	BB7_6;
	bra.uni 	BB7_5;

BB7_5:
	mov.u32 	%r7, 254;
	// inline asm
	call (%r6), _optix_report_intersection_0, (%f12, %r7);
	// inline asm

BB7_6:
	ret;
}

	// .globl	__closesthit__sphere
.visible .entry __closesthit__sphere(

)
{
	.reg .pred 	%p<18>;
	.reg .b16 	%rs<4>;
	.reg .f32 	%f<203>;
	.reg .b32 	%r<22>;
	.reg .f64 	%fd<7>;
	.reg .b64 	%rd<74>;


	// inline asm
	call (%r4), _optix_get_launch_dimension_x, ();
	// inline asm
	// inline asm
	call (%r5), _optix_get_launch_dimension_y, ();
	// inline asm
	// inline asm
	call (%r7), _optix_get_launch_index_x, ();
	// inline asm
	// inline asm
	call (%r8), _optix_get_launch_index_y, ();
	// inline asm
	// inline asm
	call (%r9), _optix_get_launch_index_z, ();
	// inline asm
	mad.lo.s32 	%r10, %r9, %r5, %r8;
	mad.lo.s32 	%r1, %r10, %r4, %r7;
	ld.const.u64 	%rd1, [params+232];
	setp.eq.s64	%p1, %rd1, 0;
	@%p1 bra 	BB8_2;

	cvta.to.global.u64 	%rd5, %rd1;
	cvt.u64.u32	%rd6, %r1;
	add.s64 	%rd7, %rd5, %rd6;
	mov.u16 	%rs2, 1;
	st.global.u8 	[%rd7], %rs2;
	bra.uni 	BB8_14;

BB8_2:
	// inline asm
	call (%rd8), _optix_get_sbt_data_ptr_64, ();
	// inline asm
	ld.u64 	%rd3, [%rd8+8];
	// inline asm
	call (%f42), _optix_get_world_ray_origin_x, ();
	// inline asm
	// inline asm
	call (%f43), _optix_get_world_ray_origin_y, ();
	// inline asm
	// inline asm
	call (%f44), _optix_get_world_ray_origin_z, ();
	// inline asm
	// inline asm
	call (%f45), _optix_get_world_ray_direction_x, ();
	// inline asm
	// inline asm
	call (%f46), _optix_get_world_ray_direction_y, ();
	// inline asm
	// inline asm
	call (%f47), _optix_get_world_ray_direction_z, ();
	// inline asm
	// inline asm
	call (%f48), _optix_get_ray_tmax, ();
	// inline asm
	fma.rn.f32 	%f49, %f48, %f45, %f42;
	fma.rn.f32 	%f50, %f48, %f46, %f43;
	fma.rn.f32 	%f51, %f48, %f47, %f44;
	ld.f32 	%f52, [%rd3+288];
	sub.f32 	%f53, %f49, %f52;
	ld.f32 	%f54, [%rd3+292];
	sub.f32 	%f55, %f50, %f54;
	ld.f32 	%f56, [%rd3+296];
	sub.f32 	%f57, %f51, %f56;
	mul.f32 	%f58, %f53, %f53;
	fma.rn.f32 	%f59, %f55, %f55, %f58;
	fma.rn.f32 	%f60, %f57, %f57, %f59;
	sqrt.rn.f32 	%f61, %f60;
	div.rn.f32 	%f202, %f53, %f61;
	div.rn.f32 	%f201, %f55, %f61;
	div.rn.f32 	%f200, %f57, %f61;
	ld.f32 	%f62, [%rd3+304];
	fma.rn.f32 	%f5, %f62, %f202, %f52;
	fma.rn.f32 	%f6, %f62, %f201, %f54;
	fma.rn.f32 	%f7, %f62, %f200, %f56;
	ld.v4.f32 	{%f63, %f64, %f65, %f66}, [%rd3+208];
	ld.f32 	%f70, [%rd3+160];
	fma.rn.f32 	%f71, %f5, %f70, %f63;
	ld.f32 	%f72, [%rd3+164];
	fma.rn.f32 	%f73, %f5, %f72, %f64;
	ld.f32 	%f74, [%rd3+168];
	fma.rn.f32 	%f75, %f5, %f74, %f65;
	ld.f32 	%f76, [%rd3+176];
	fma.rn.f32 	%f77, %f6, %f76, %f71;
	ld.f32 	%f78, [%rd3+180];
	fma.rn.f32 	%f79, %f6, %f78, %f73;
	ld.f32 	%f80, [%rd3+184];
	fma.rn.f32 	%f81, %f6, %f80, %f75;
	ld.f32 	%f82, [%rd3+192];
	fma.rn.f32 	%f8, %f7, %f82, %f77;
	ld.f32 	%f83, [%rd3+196];
	fma.rn.f32 	%f9, %f7, %f83, %f79;
	ld.f32 	%f84, [%rd3+200];
	fma.rn.f32 	%f10, %f7, %f84, %f81;
	mul.f32 	%f85, %f9, %f9;
	fma.rn.f32 	%f11, %f8, %f8, %f85;
	abs.f32 	%f86, %f10;
	mov.f32 	%f87, 0f3F800000;
	sub.f32 	%f88, %f87, %f86;
	mul.f32 	%f89, %f88, 0f3F000000;
	sqrt.rn.f32 	%f90, %f89;
	setp.gt.f32	%p2, %f86, 0f3F11EB85;
	selp.f32	%f91, %f90, %f86, %p2;
	mul.f32 	%f92, %f91, %f91;
	mov.f32 	%f93, 0f3C94D2E9;
	mov.f32 	%f94, 0f3D53F941;
	fma.rn.f32 	%f95, %f94, %f92, %f93;
	mov.f32 	%f96, 0f3D3F841F;
	fma.rn.f32 	%f97, %f95, %f92, %f96;
	mov.f32 	%f98, 0f3D994929;
	fma.rn.f32 	%f99, %f97, %f92, %f98;
	mov.f32 	%f100, 0f3E2AAB94;
	fma.rn.f32 	%f101, %f99, %f92, %f100;
	mul.f32 	%f102, %f92, %f101;
	fma.rn.f32 	%f103, %f102, %f91, %f91;
	add.f32 	%f104, %f103, %f103;
	mov.f32 	%f105, 0f3FC90FDB;
	sub.f32 	%f106, %f105, %f103;
	selp.f32	%f12, %f104, %f106, %p2;
	abs.f32 	%f13, %f8;
	abs.f32 	%f14, %f9;
	setp.eq.f32	%p3, %f13, 0f00000000;
	setp.eq.f32	%p4, %f14, 0f00000000;
	and.pred  	%p5, %p3, %p4;
	mov.b32 	 %r2, %f8;
	mov.b32 	 %r11, %f9;
	and.b32  	%r3, %r11, -2147483648;
	@%p5 bra 	BB8_6;
	bra.uni 	BB8_3;

BB8_6:
	shr.s32 	%r18, %r2, 31;
	and.b32  	%r19, %r18, 1078530011;
	or.b32  	%r20, %r19, %r3;
	mov.b32 	 %f189, %r20;
	bra.uni 	BB8_7;

BB8_3:
	setp.eq.f32	%p6, %f13, 0f7F800000;
	setp.eq.f32	%p7, %f14, 0f7F800000;
	and.pred  	%p8, %p6, %p7;
	@%p8 bra 	BB8_5;
	bra.uni 	BB8_4;

BB8_5:
	shr.s32 	%r14, %r2, 31;
	and.b32  	%r15, %r14, 13483017;
	add.s32 	%r16, %r15, 1061752795;
	or.b32  	%r17, %r16, %r3;
	mov.b32 	 %f189, %r17;
	bra.uni 	BB8_7;

BB8_4:
	max.f32 	%f107, %f14, %f13;
	min.f32 	%f108, %f14, %f13;
	div.rn.f32 	%f109, %f108, %f107;
	mul.rn.f32 	%f110, %f109, %f109;
	mov.f32 	%f111, 0fC0B59883;
	mov.f32 	%f112, 0fBF52C7EA;
	fma.rn.f32 	%f113, %f110, %f112, %f111;
	mov.f32 	%f114, 0fC0D21907;
	fma.rn.f32 	%f115, %f113, %f110, %f114;
	mul.f32 	%f116, %f110, %f115;
	mul.f32 	%f117, %f109, %f116;
	add.f32 	%f118, %f110, 0f41355DC0;
	mov.f32 	%f119, 0f41E6BD60;
	fma.rn.f32 	%f120, %f118, %f110, %f119;
	mov.f32 	%f121, 0f419D92C8;
	fma.rn.f32 	%f122, %f120, %f110, %f121;
	rcp.rn.f32 	%f123, %f122;
	fma.rn.f32 	%f124, %f117, %f123, %f109;
	sub.f32 	%f126, %f105, %f124;
	setp.gt.f32	%p9, %f14, %f13;
	selp.f32	%f127, %f126, %f124, %p9;
	mov.f32 	%f128, 0f40490FDB;
	sub.f32 	%f129, %f128, %f127;
	setp.lt.s32	%p10, %r2, 0;
	selp.f32	%f130, %f129, %f127, %p10;
	mov.b32 	 %r12, %f130;
	or.b32  	%r13, %r12, %r3;
	mov.b32 	 %f131, %r13;
	add.f32 	%f132, %f13, %f14;
	setp.gtu.f32	%p11, %f132, 0f7F800000;
	selp.f32	%f189, %f132, %f131, %p11;

BB8_7:
	setp.geu.f32	%p12, %f189, 0f00000000;
	@%p12 bra 	BB8_9;

	cvt.f64.f32	%fd1, %f189;
	add.f64 	%fd2, %fd1, 0d401921FB54442D18;
	cvt.rn.f32.f64	%f189, %fd2;

BB8_9:
	ld.const.u8 	%rs1, [params+248];
	setp.eq.s16	%p13, %rs1, 0;
	@%p13 bra 	BB8_11;

	neg.f32 	%f134, %f9;
	sqrt.rn.f32 	%f135, %f11;
	rcp.rn.f32 	%f136, %f135;
	mul.f32 	%f137, %f8, %f136;
	mul.f32 	%f138, %f9, %f136;
	mul.f32 	%f139, %f10, %f137;
	mul.f32 	%f140, %f10, %f138;
	neg.f32 	%f141, %f135;
	setp.eq.f32	%p14, %f135, 0f00000000;
	selp.f32	%f142, 0f3F800000, %f139, %p14;
	selp.f32	%f143, 0f00000000, %f140, %p14;
	selp.f32	%f144, 0f00000000, %f141, %p14;
	ld.v4.f32 	{%f145, %f146, %f147, %f148}, [%rd3+32];
	mul.f32 	%f152, %f145, %f134;
	mul.f32 	%f153, %f146, %f134;
	mul.f32 	%f154, %f147, %f134;
	ld.v4.f32 	{%f155, %f156, %f157, %f158}, [%rd3+48];
	fma.rn.f32 	%f162, %f8, %f155, %f152;
	fma.rn.f32 	%f163, %f8, %f156, %f153;
	fma.rn.f32 	%f164, %f8, %f157, %f154;
	ld.f32 	%f165, [%rd3+64];
	mov.f32 	%f166, 0f00000000;
	fma.rn.f32 	%f167, %f166, %f165, %f162;
	ld.f32 	%f168, [%rd3+68];
	fma.rn.f32 	%f169, %f166, %f168, %f163;
	ld.f32 	%f170, [%rd3+72];
	fma.rn.f32 	%f171, %f166, %f170, %f164;
	mul.f32 	%f194, %f167, 0f40C90FDB;
	mul.f32 	%f195, %f169, 0f40C90FDB;
	mul.f32 	%f196, %f171, 0f40C90FDB;
	mul.f32 	%f172, %f142, %f145;
	mul.f32 	%f173, %f142, %f146;
	mul.f32 	%f174, %f142, %f147;
	fma.rn.f32 	%f175, %f143, %f155, %f172;
	fma.rn.f32 	%f176, %f143, %f156, %f173;
	fma.rn.f32 	%f177, %f143, %f157, %f174;
	fma.rn.f32 	%f178, %f144, %f165, %f175;
	fma.rn.f32 	%f179, %f144, %f168, %f176;
	fma.rn.f32 	%f180, %f144, %f170, %f177;
	mul.f32 	%f191, %f178, 0f40490FDB;
	mul.f32 	%f192, %f179, 0f40490FDB;
	mul.f32 	%f193, %f180, 0f40490FDB;
	ld.u8 	%rs3, [%rd3+308];
	setp.eq.s16	%p15, %rs3, 0;
	neg.f32 	%f181, %f202;
	selp.f32	%f202, %f202, %f181, %p15;
	neg.f32 	%f182, %f201;
	selp.f32	%f201, %f201, %f182, %p15;
	neg.f32 	%f183, %f200;
	selp.f32	%f200, %f200, %f183, %p15;

BB8_11:
	ld.u64 	%rd9, [%rd8];
	// inline asm
	call (%r21), _optix_read_primitive_idx, ();
	// inline asm
	ld.const.u64 	%rd10, [params+216];
	cvta.to.global.u64 	%rd11, %rd10;
	cvt.u64.u32	%rd4, %r1;
	mul.wide.u32 	%rd12, %r1, 8;
	add.s64 	%rd13, %rd11, %rd12;
	st.global.u64 	[%rd13], %rd9;
	ld.const.u64 	%rd14, [params+224];
	cvta.to.global.u64 	%rd15, %rd14;
	mul.wide.u32 	%rd16, %r1, 4;
	add.s64 	%rd17, %rd15, %rd16;
	st.global.u32 	[%rd17], %r21;
	ld.const.u64 	%rd18, [params+80];
	cvta.to.global.u64 	%rd19, %rd18;
	add.s64 	%rd20, %rd19, %rd16;
	cvt.f64.f32	%fd3, %f189;
	div.rn.f64 	%fd4, %fd3, 0d401921FB54442D18;
	cvt.rn.f32.f64	%f184, %fd4;
	st.global.f32 	[%rd20], %f184;
	ld.const.u64 	%rd21, [params+88];
	cvta.to.global.u64 	%rd22, %rd21;
	add.s64 	%rd23, %rd22, %rd16;
	mov.f32 	%f185, 0f40490FDB;
	sub.f32 	%f186, %f185, %f12;
	setp.lt.f32	%p16, %f10, 0f00000000;
	selp.f32	%f187, %f186, %f12, %p16;
	cvt.f64.f32	%fd5, %f187;
	div.rn.f64 	%fd6, %fd5, 0d400921FB54442D18;
	cvt.rn.f32.f64	%f188, %fd6;
	st.global.f32 	[%rd23], %f188;
	ld.const.u64 	%rd24, [params+144];
	cvta.to.global.u64 	%rd25, %rd24;
	add.s64 	%rd26, %rd25, %rd16;
	st.global.f32 	[%rd26], %f5;
	ld.const.u64 	%rd27, [params+152];
	cvta.to.global.u64 	%rd28, %rd27;
	add.s64 	%rd29, %rd28, %rd16;
	st.global.f32 	[%rd29], %f6;
	ld.const.u64 	%rd30, [params+160];
	cvta.to.global.u64 	%rd31, %rd30;
	add.s64 	%rd32, %rd31, %rd16;
	st.global.f32 	[%rd32], %f7;
	@%p13 bra 	BB8_13;

	ld.const.u64 	%rd33, [params+96];
	cvta.to.global.u64 	%rd34, %rd33;
	shl.b64 	%rd35, %rd4, 2;
	add.s64 	%rd36, %rd34, %rd35;
	st.global.f32 	[%rd36], %f202;
	ld.const.u64 	%rd37, [params+104];
	cvta.to.global.u64 	%rd38, %rd37;
	add.s64 	%rd39, %rd38, %rd35;
	st.global.f32 	[%rd39], %f201;
	ld.const.u64 	%rd40, [params+112];
	cvta.to.global.u64 	%rd41, %rd40;
	add.s64 	%rd42, %rd41, %rd35;
	st.global.f32 	[%rd42], %f200;
	ld.const.u64 	%rd43, [params+120];
	cvta.to.global.u64 	%rd44, %rd43;
	add.s64 	%rd45, %rd44, %rd35;
	st.global.f32 	[%rd45], %f202;
	ld.const.u64 	%rd46, [params+128];
	cvta.to.global.u64 	%rd47, %rd46;
	add.s64 	%rd48, %rd47, %rd35;
	st.global.f32 	[%rd48], %f201;
	ld.const.u64 	%rd49, [params+136];
	cvta.to.global.u64 	%rd50, %rd49;
	add.s64 	%rd51, %rd50, %rd35;
	st.global.f32 	[%rd51], %f200;
	ld.const.u64 	%rd52, [params+168];
	cvta.to.global.u64 	%rd53, %rd52;
	add.s64 	%rd54, %rd53, %rd35;
	st.global.f32 	[%rd54], %f194;
	ld.const.u64 	%rd55, [params+176];
	cvta.to.global.u64 	%rd56, %rd55;
	add.s64 	%rd57, %rd56, %rd35;
	st.global.f32 	[%rd57], %f195;
	ld.const.u64 	%rd58, [params+184];
	cvta.to.global.u64 	%rd59, %rd58;
	add.s64 	%rd60, %rd59, %rd35;
	st.global.f32 	[%rd60], %f196;
	ld.const.u64 	%rd61, [params+192];
	cvta.to.global.u64 	%rd62, %rd61;
	add.s64 	%rd63, %rd62, %rd35;
	st.global.f32 	[%rd63], %f191;
	ld.const.u64 	%rd64, [params+200];
	cvta.to.global.u64 	%rd65, %rd64;
	add.s64 	%rd66, %rd65, %rd35;
	st.global.f32 	[%rd66], %f192;
	ld.const.u64 	%rd67, [params+208];
	cvta.to.global.u64 	%rd68, %rd67;
	add.s64 	%rd69, %rd68, %rd35;
	st.global.f32 	[%rd69], %f193;

BB8_13:
	ld.const.u64 	%rd70, [params+72];
	cvta.to.global.u64 	%rd71, %rd70;
	shl.b64 	%rd72, %rd4, 2;
	add.s64 	%rd73, %rd71, %rd72;
	st.global.f32 	[%rd73], %f48;

BB8_14:
	ret;
}

	// .globl	__raygen__rg
.visible .entry __raygen__rg(

)
{
	.reg .pred 	%p<4>;
	.reg .b16 	%rs<5>;
	.reg .f32 	%f<27>;
	.reg .b32 	%r<20>;
	.reg .b64 	%rd<44>;


	// inline asm
	call (%r1), _optix_get_launch_dimension_x, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_launch_dimension_y, ();
	// inline asm
	// inline asm
	call (%r4), _optix_get_launch_index_x, ();
	// inline asm
	// inline asm
	call (%r5), _optix_get_launch_index_y, ();
	// inline asm
	// inline asm
	call (%r6), _optix_get_launch_index_z, ();
	// inline asm
	mad.lo.s32 	%r7, %r6, %r2, %r5;
	mad.lo.s32 	%r8, %r7, %r1, %r4;
	ld.const.u64 	%rd3, [params+8];
	cvta.to.global.u64 	%rd4, %rd3;
	cvt.u64.u32	%rd1, %r8;
	mul.wide.u32 	%rd5, %r8, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.f32 	%f1, [%rd6];
	ld.const.u64 	%rd7, [params+16];
	cvta.to.global.u64 	%rd8, %rd7;
	add.s64 	%rd9, %rd8, %rd5;
	ld.global.f32 	%f2, [%rd9];
	ld.const.u64 	%rd10, [params+24];
	cvta.to.global.u64 	%rd11, %rd10;
	add.s64 	%rd12, %rd11, %rd5;
	ld.global.f32 	%f3, [%rd12];
	ld.const.u64 	%rd13, [params+32];
	cvta.to.global.u64 	%rd14, %rd13;
	add.s64 	%rd15, %rd14, %rd5;
	ld.global.f32 	%f4, [%rd15];
	ld.const.u64 	%rd16, [params+40];
	cvta.to.global.u64 	%rd17, %rd16;
	add.s64 	%rd18, %rd17, %rd5;
	ld.global.f32 	%f5, [%rd18];
	ld.const.u64 	%rd19, [params+48];
	cvta.to.global.u64 	%rd20, %rd19;
	add.s64 	%rd21, %rd20, %rd5;
	ld.global.f32 	%f6, [%rd21];
	ld.const.u64 	%rd22, [params+56];
	cvta.to.global.u64 	%rd23, %rd22;
	add.s64 	%rd24, %rd23, %rd5;
	ld.global.f32 	%f7, [%rd24];
	ld.const.u64 	%rd25, [params+64];
	cvta.to.global.u64 	%rd26, %rd25;
	add.s64 	%rd27, %rd26, %rd5;
	ld.global.f32 	%f8, [%rd27];
	ld.const.u64 	%rd2, [params+232];
	setp.eq.s64	%p1, %rd2, 0;
	ld.const.u64 	%rd28, [params];
	cvta.to.global.u64 	%rd29, %rd28;
	add.s64 	%rd30, %rd29, %rd1;
	ld.global.u8 	%rs1, [%rd30];
	@%p1 bra 	BB9_4;

	setp.eq.s16	%p2, %rs1, 0;
	@%p2 bra 	BB9_3;

	ld.const.u64 	%rd31, [params+240];
	mov.u32 	%r10, 4;
	mov.u32 	%r12, 1;
	mov.u32 	%r13, 0;
	mov.f32 	%f17, 0f00000000;
	// inline asm
	call _optix_trace_0, (%rd31, %f1, %f2, %f3, %f4, %f5, %f6, %f7, %f8, %f17, %r12, %r10, %r13, %r12, %r13);
	// inline asm
	bra.uni 	BB9_7;

BB9_4:
	setp.eq.s16	%p3, %rs1, 0;
	@%p3 bra 	BB9_6;

	ld.const.u64 	%rd34, [params+240];
	mov.u32 	%r17, 1;
	mov.u32 	%r18, 0;
	mov.f32 	%f26, 0f00000000;
	// inline asm
	call _optix_trace_0, (%rd34, %f1, %f2, %f3, %f4, %f5, %f6, %f7, %f8, %f26, %r17, %r18, %r18, %r17, %r18);
	// inline asm
	bra.uni 	BB9_7;

BB9_3:
	cvta.to.global.u64 	%rd32, %rd2;
	add.s64 	%rd33, %rd32, %rd1;
	mov.u16 	%rs3, 0;
	st.global.u8 	[%rd33], %rs3;
	bra.uni 	BB9_7;

BB9_6:
	ld.const.u64 	%rd35, [params+216];
	cvta.to.global.u64 	%rd36, %rd35;
	shl.b64 	%rd37, %rd1, 3;
	add.s64 	%rd38, %rd36, %rd37;
	mov.u64 	%rd39, 0;
	st.global.u64 	[%rd38], %rd39;
	ld.const.u64 	%rd40, [params+72];
	cvta.to.global.u64 	%rd41, %rd40;
	shl.b64 	%rd42, %rd1, 2;
	add.s64 	%rd43, %rd41, %rd42;
	mov.u32 	%r19, 2139095040;
	st.global.u32 	[%rd43], %r19;

BB9_7:
	ret;
}

	// .globl	__miss__ms
.visible .entry __miss__ms(

)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<10>;
	.reg .b64 	%rd<14>;


	// inline asm
	call (%r1), _optix_get_launch_dimension_x, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_launch_dimension_y, ();
	// inline asm
	// inline asm
	call (%r4), _optix_get_launch_index_x, ();
	// inline asm
	// inline asm
	call (%r5), _optix_get_launch_index_y, ();
	// inline asm
	// inline asm
	call (%r6), _optix_get_launch_index_z, ();
	// inline asm
	mad.lo.s32 	%r7, %r6, %r2, %r5;
	mad.lo.s32 	%r8, %r7, %r1, %r4;
	ld.const.u64 	%rd1, [params+232];
	setp.eq.s64	%p1, %rd1, 0;
	cvt.u64.u32	%rd2, %r8;
	@%p1 bra 	BB10_2;

	cvta.to.global.u64 	%rd3, %rd1;
	add.s64 	%rd4, %rd3, %rd2;
	mov.u16 	%rs1, 0;
	st.global.u8 	[%rd4], %rs1;
	bra.uni 	BB10_3;

BB10_2:
	ld.const.u64 	%rd5, [params+216];
	cvta.to.global.u64 	%rd6, %rd5;
	shl.b64 	%rd7, %rd2, 3;
	add.s64 	%rd8, %rd6, %rd7;
	mov.u64 	%rd9, 0;
	st.global.u64 	[%rd8], %rd9;
	ld.const.u64 	%rd10, [params+72];
	cvta.to.global.u64 	%rd11, %rd10;
	shl.b64 	%rd12, %rd2, 2;
	add.s64 	%rd13, %rd11, %rd12;
	mov.u32 	%r9, 2139095040;
	st.global.u32 	[%rd13], %r9;

BB10_3:
	ret;
}

	// .globl	__exception__err
.visible .entry __exception__err(

)
{
	.local .align 16 .b8 	__local_depot11[16];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .b32 	%r<3>;
	.reg .b64 	%rd<9>;


	mov.u64 	%SPL, __local_depot11;
	cvta.local.u64 	%SP, %SPL;
	// inline asm
	call (%r1), _optix_get_exception_code, ();
	// inline asm
	mul.wide.s32 	%rd1, %r1, 16;
	mov.u64 	%rd2, exceptions;
	add.s64 	%rd3, %rd2, %rd1;
	ld.const.u64 	%rd4, [%rd3+8];
	add.u64 	%rd5, %SP, 0;
	add.u64 	%rd6, %SPL, 0;
	st.local.u32 	[%rd6], %r1;
	st.local.u64 	[%rd6+8], %rd4;
	mov.u64 	%rd7, $str6;
	cvta.global.u64 	%rd8, %rd7;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd8;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd5;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r2, [retval0+0];
	
	//{
	}// Callseq End 0
	ret;
}


