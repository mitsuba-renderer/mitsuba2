//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-27506705
// Cuda compilation tools, release 10.2, V10.2.89
// Based on LLVM 3.4svn
//

.version 6.5
.target sm_61
.address_size 64

	// .globl	__raygen__rg
.extern .func  (.param .b32 func_retval0) vprintf
(
	.param .b64 vprintf_param_0,
	.param .b64 vprintf_param_1
)
;
.const .align 8 .b8 params[256];
.global .align 1 .b8 $str[36] = {79, 80, 84, 73, 88, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 67, 79, 68, 69, 95, 83, 84, 65, 67, 75, 95, 79, 86, 69, 82, 70, 76, 79, 87, 0};
.global .align 1 .b8 $str1[42] = {79, 80, 84, 73, 88, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 67, 79, 68, 69, 95, 84, 82, 65, 67, 69, 95, 68, 69, 80, 84, 72, 95, 69, 88, 67, 69, 69, 68, 69, 68, 0};
.global .align 1 .b8 $str2[46] = {79, 80, 84, 73, 88, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 67, 79, 68, 69, 95, 84, 82, 65, 86, 69, 82, 83, 65, 76, 95, 68, 69, 80, 84, 72, 95, 69, 88, 67, 69, 69, 68, 69, 68, 0};
.global .align 1 .b8 $str3[51] = {79, 80, 84, 73, 88, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 67, 79, 68, 69, 95, 84, 82, 65, 86, 69, 82, 83, 65, 76, 95, 73, 78, 86, 65, 76, 73, 68, 95, 84, 82, 65, 86, 69, 82, 83, 65, 66, 76, 69, 0};
.global .align 1 .b8 $str4[48] = {79, 80, 84, 73, 88, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 67, 79, 68, 69, 95, 84, 82, 65, 86, 69, 82, 83, 65, 76, 95, 73, 78, 86, 65, 76, 73, 68, 95, 77, 73, 83, 83, 95, 83, 66, 84, 0};
.global .align 1 .b8 $str5[47] = {79, 80, 84, 73, 88, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 67, 79, 68, 69, 95, 84, 82, 65, 86, 69, 82, 83, 65, 76, 95, 73, 78, 86, 65, 76, 73, 68, 95, 72, 73, 84, 95, 83, 66, 84, 0};
.const .align 8 .u64 exceptions[12] = {4294967295, generic($str), 4294967294, generic($str1), 4294967293, generic($str2), 4294967291, generic($str3), 4294967290, generic($str4), 4294967289, generic($str5)};
.global .align 1 .b8 $str8[24] = {79, 112, 116, 105, 120, 32, 69, 120, 99, 101, 112, 116, 105, 111, 110, 32, 37, 117, 58, 32, 37, 115, 10, 0};

.visible .entry __raygen__rg(

)
{
	.reg .pred 	%p<4>;
	.reg .b16 	%rs<6>;
	.reg .f32 	%f<27>;
	.reg .b32 	%r<20>;
	.reg .b64 	%rd<44>;


	// inline asm
	call (%r1), _optix_get_launch_dimension_x, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_launch_dimension_y, ();
	// inline asm
	// inline asm
	call (%r4), _optix_get_launch_index_x, ();
	// inline asm
	// inline asm
	call (%r5), _optix_get_launch_index_y, ();
	// inline asm
	// inline asm
	call (%r6), _optix_get_launch_index_z, ();
	// inline asm
	mad.lo.s32 	%r7, %r6, %r2, %r5;
	mad.lo.s32 	%r8, %r7, %r1, %r4;
	ld.const.u64 	%rd2, [params+8];
	cvta.to.global.u64 	%rd3, %rd2;
	cvt.u64.u32	%rd1, %r8;
	mul.wide.u32 	%rd4, %r8, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	ld.const.u64 	%rd6, [params+16];
	cvta.to.global.u64 	%rd7, %rd6;
	add.s64 	%rd8, %rd7, %rd4;
	ld.global.f32 	%f2, [%rd8];
	ld.const.u64 	%rd9, [params+24];
	cvta.to.global.u64 	%rd10, %rd9;
	add.s64 	%rd11, %rd10, %rd4;
	ld.global.f32 	%f3, [%rd11];
	ld.const.u64 	%rd12, [params+32];
	cvta.to.global.u64 	%rd13, %rd12;
	add.s64 	%rd14, %rd13, %rd4;
	ld.global.f32 	%f4, [%rd14];
	ld.const.u64 	%rd15, [params+40];
	cvta.to.global.u64 	%rd16, %rd15;
	add.s64 	%rd17, %rd16, %rd4;
	ld.global.f32 	%f5, [%rd17];
	ld.const.u64 	%rd18, [params+48];
	cvta.to.global.u64 	%rd19, %rd18;
	add.s64 	%rd20, %rd19, %rd4;
	ld.global.f32 	%f6, [%rd20];
	ld.const.u64 	%rd21, [params+56];
	cvta.to.global.u64 	%rd22, %rd21;
	add.s64 	%rd23, %rd22, %rd4;
	ld.global.f32 	%f7, [%rd23];
	ld.const.u64 	%rd24, [params+64];
	cvta.to.global.u64 	%rd25, %rd24;
	add.s64 	%rd26, %rd25, %rd4;
	ld.global.f32 	%f8, [%rd26];
	ld.const.u8 	%rs2, [params+248];
	setp.eq.s16	%p1, %rs2, 0;
	ld.const.u64 	%rd27, [params];
	cvta.to.global.u64 	%rd28, %rd27;
	add.s64 	%rd29, %rd28, %rd1;
	ld.global.u8 	%rs1, [%rd29];
	@%p1 bra 	BB0_4;

	setp.eq.s16	%p2, %rs1, 0;
	@%p2 bra 	BB0_3;

	ld.const.u64 	%rd30, [params+240];
	mov.u32 	%r10, 4;
	mov.u32 	%r12, 1;
	mov.u32 	%r13, 0;
	mov.f32 	%f17, 0f00000000;
	// inline asm
	call _optix_trace_0, (%rd30, %f1, %f2, %f3, %f4, %f5, %f6, %f7, %f8, %f17, %r12, %r10, %r13, %r12, %r13);
	// inline asm
	bra.uni 	BB0_7;

BB0_4:
	setp.eq.s16	%p3, %rs1, 0;
	@%p3 bra 	BB0_6;

	ld.const.u64 	%rd34, [params+240];
	mov.u32 	%r17, 1;
	mov.u32 	%r18, 0;
	mov.f32 	%f26, 0f00000000;
	// inline asm
	call _optix_trace_0, (%rd34, %f1, %f2, %f3, %f4, %f5, %f6, %f7, %f8, %f26, %r17, %r18, %r18, %r17, %r18);
	// inline asm
	bra.uni 	BB0_7;

BB0_3:
	ld.const.u64 	%rd31, [params+232];
	cvta.to.global.u64 	%rd32, %rd31;
	add.s64 	%rd33, %rd32, %rd1;
	mov.u16 	%rs4, 0;
	st.global.u8 	[%rd33], %rs4;
	bra.uni 	BB0_7;

BB0_6:
	ld.const.u64 	%rd35, [params+216];
	cvta.to.global.u64 	%rd36, %rd35;
	shl.b64 	%rd37, %rd1, 3;
	add.s64 	%rd38, %rd36, %rd37;
	mov.u64 	%rd39, 0;
	st.global.u64 	[%rd38], %rd39;
	ld.const.u64 	%rd40, [params+72];
	cvta.to.global.u64 	%rd41, %rd40;
	shl.b64 	%rd42, %rd1, 2;
	add.s64 	%rd43, %rd41, %rd42;
	mov.u32 	%r19, 2139095040;
	st.global.u32 	[%rd43], %r19;

BB0_7:
	ret;
}

	// .globl	__closesthit__ch
.visible .entry __closesthit__ch(

)
{
	.reg .pred 	%p<5>;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<174>;
	.reg .b32 	%r<17>;
	.reg .b64 	%rd<97>;


	// inline asm
	call (%r3), _optix_get_launch_dimension_x, ();
	// inline asm
	// inline asm
	call (%r4), _optix_get_launch_dimension_y, ();
	// inline asm
	// inline asm
	call (%r6), _optix_get_launch_index_x, ();
	// inline asm
	// inline asm
	call (%r7), _optix_get_launch_index_y, ();
	// inline asm
	// inline asm
	call (%r8), _optix_get_launch_index_z, ();
	// inline asm
	mad.lo.s32 	%r9, %r8, %r4, %r7;
	mad.lo.s32 	%r1, %r9, %r3, %r6;
	ld.const.u64 	%rd1, [params+232];
	setp.eq.s64	%p1, %rd1, 0;
	@%p1 bra 	BB1_2;

	cvta.to.global.u64 	%rd8, %rd1;
	cvt.u64.u32	%rd9, %r1;
	add.s64 	%rd10, %rd8, %rd9;
	mov.u16 	%rs1, 1;
	st.global.u8 	[%rd10], %rs1;
	bra.uni 	BB1_9;

BB1_2:
	// inline asm
	call (%rd11), _optix_get_sbt_data_ptr_64, ();
	// inline asm
	// inline asm
	call (%f166, %f167), _optix_get_triangle_barycentrics, ();
	// inline asm
	ld.u64 	%rd12, [%rd11+8];
	ld.u64 	%rd13, [%rd11+16];
	ld.u64 	%rd3, [%rd11+24];
	ld.u64 	%rd4, [%rd11+32];
	// inline asm
	call (%r10), _optix_read_primitive_idx, ();
	// inline asm
	mul.wide.u32 	%rd14, %r10, 12;
	add.s64 	%rd15, %rd12, %rd14;
	ld.u32 	%r11, [%rd15];
	ld.u32 	%r12, [%rd15+4];
	ld.u32 	%r13, [%rd15+8];
	cvt.u64.u32	%rd5, %r11;
	mul.wide.u32 	%rd16, %r11, 12;
	add.s64 	%rd17, %rd13, %rd16;
	ld.f32 	%f55, [%rd17];
	ld.f32 	%f56, [%rd17+4];
	ld.f32 	%f57, [%rd17+8];
	cvt.u64.u32	%rd6, %r12;
	mul.wide.u32 	%rd18, %r12, 12;
	add.s64 	%rd19, %rd13, %rd18;
	ld.f32 	%f58, [%rd19];
	ld.f32 	%f59, [%rd19+4];
	ld.f32 	%f60, [%rd19+8];
	cvt.u64.u32	%rd7, %r13;
	mul.wide.u32 	%rd20, %r13, 12;
	add.s64 	%rd21, %rd13, %rd20;
	ld.f32 	%f61, [%rd21];
	ld.f32 	%f62, [%rd21+4];
	ld.f32 	%f63, [%rd21+8];
	sub.f32 	%f1, %f58, %f55;
	sub.f32 	%f2, %f59, %f56;
	sub.f32 	%f3, %f60, %f57;
	mov.f32 	%f64, 0f3F800000;
	sub.f32 	%f65, %f64, %f166;
	sub.f32 	%f6, %f65, %f167;
	sub.f32 	%f7, %f61, %f55;
	sub.f32 	%f8, %f62, %f56;
	sub.f32 	%f9, %f63, %f57;
	mul.f32 	%f66, %f58, %f166;
	mul.f32 	%f67, %f59, %f166;
	mul.f32 	%f68, %f60, %f166;
	fma.rn.f32 	%f69, %f55, %f6, %f66;
	fma.rn.f32 	%f70, %f56, %f6, %f67;
	fma.rn.f32 	%f71, %f57, %f6, %f68;
	fma.rn.f32 	%f10, %f61, %f167, %f69;
	fma.rn.f32 	%f11, %f62, %f167, %f70;
	fma.rn.f32 	%f12, %f63, %f167, %f71;
	mul.f32 	%f72, %f2, %f9;
	mul.f32 	%f73, %f3, %f8;
	sub.f32 	%f74, %f72, %f73;
	mul.f32 	%f75, %f3, %f7;
	mul.f32 	%f76, %f1, %f9;
	sub.f32 	%f77, %f75, %f76;
	mul.f32 	%f78, %f1, %f8;
	mul.f32 	%f79, %f2, %f7;
	sub.f32 	%f80, %f78, %f79;
	mul.f32 	%f81, %f77, %f77;
	fma.rn.f32 	%f82, %f74, %f74, %f81;
	fma.rn.f32 	%f83, %f80, %f80, %f82;
	sqrt.rn.f32 	%f84, %f83;
	div.rn.f32 	%f13, %f74, %f84;
	div.rn.f32 	%f14, %f77, %f84;
	div.rn.f32 	%f15, %f80, %f84;
	mov.b32 	 %r14, %f15;
	and.b32  	%r15, %r14, -2147483648;
	or.b32  	%r16, %r15, 1065353216;
	mov.b32 	 %f16, %r16;
	add.f32 	%f85, %f15, %f16;
	mov.f32 	%f86, 0fBF800000;
	div.rn.f32 	%f87, %f86, %f85;
	mul.f32 	%f88, %f13, %f14;
	mul.f32 	%f173, %f88, %f87;
	mul.f32 	%f89, %f13, %f13;
	mul.f32 	%f90, %f89, %f87;
	fma.rn.f32 	%f170, %f90, %f16, 0f3F800000;
	mul.f32 	%f91, %f14, %f14;
	fma.rn.f32 	%f172, %f91, %f87, %f16;
	setp.eq.s64	%p2, %rd3, 0;
	@%p2 bra 	BB1_4;

	mul.lo.s64 	%rd22, %rd5, 12;
	add.s64 	%rd23, %rd3, %rd22;
	ld.f32 	%f92, [%rd23];
	ld.f32 	%f93, [%rd23+4];
	ld.f32 	%f94, [%rd23+8];
	mul.lo.s64 	%rd24, %rd6, 12;
	add.s64 	%rd25, %rd3, %rd24;
	ld.f32 	%f95, [%rd25];
	ld.f32 	%f96, [%rd25+4];
	ld.f32 	%f97, [%rd25+8];
	mul.lo.s64 	%rd26, %rd7, 12;
	add.s64 	%rd27, %rd3, %rd26;
	ld.f32 	%f98, [%rd27];
	ld.f32 	%f99, [%rd27+4];
	ld.f32 	%f100, [%rd27+8];
	mul.f32 	%f101, %f95, %f166;
	mul.f32 	%f102, %f96, %f166;
	mul.f32 	%f103, %f97, %f166;
	fma.rn.f32 	%f104, %f92, %f6, %f101;
	fma.rn.f32 	%f105, %f93, %f6, %f102;
	fma.rn.f32 	%f106, %f94, %f6, %f103;
	fma.rn.f32 	%f107, %f98, %f167, %f104;
	fma.rn.f32 	%f108, %f99, %f167, %f105;
	fma.rn.f32 	%f109, %f100, %f167, %f106;
	mul.f32 	%f110, %f108, %f108;
	fma.rn.f32 	%f111, %f107, %f107, %f110;
	fma.rn.f32 	%f112, %f109, %f109, %f111;
	sqrt.rn.f32 	%f113, %f112;
	div.rn.f32 	%f163, %f107, %f113;
	div.rn.f32 	%f164, %f108, %f113;
	div.rn.f32 	%f165, %f109, %f113;
	bra.uni 	BB1_5;

BB1_4:
	mov.f32 	%f163, %f13;
	mov.f32 	%f164, %f14;
	mov.f32 	%f165, %f15;

BB1_5:
	mul.f32 	%f169, %f173, %f16;
	mul.f32 	%f114, %f13, %f16;
	neg.f32 	%f168, %f114;
	neg.f32 	%f171, %f14;
	setp.eq.s64	%p3, %rd4, 0;
	@%p3 bra 	BB1_8;

	shl.b64 	%rd28, %rd5, 3;
	add.s64 	%rd29, %rd4, %rd28;
	ld.f32 	%f115, [%rd29];
	ld.f32 	%f116, [%rd29+4];
	shl.b64 	%rd30, %rd6, 3;
	add.s64 	%rd31, %rd4, %rd30;
	ld.f32 	%f117, [%rd31];
	ld.f32 	%f118, [%rd31+4];
	shl.b64 	%rd32, %rd7, 3;
	add.s64 	%rd33, %rd4, %rd32;
	ld.f32 	%f119, [%rd33];
	ld.f32 	%f120, [%rd33+4];
	mul.f32 	%f121, %f117, %f166;
	mul.f32 	%f122, %f118, %f166;
	fma.rn.f32 	%f123, %f115, %f6, %f121;
	fma.rn.f32 	%f124, %f116, %f6, %f122;
	fma.rn.f32 	%f166, %f119, %f167, %f123;
	fma.rn.f32 	%f167, %f120, %f167, %f124;
	sub.f32 	%f34, %f117, %f115;
	sub.f32 	%f35, %f118, %f116;
	sub.f32 	%f36, %f119, %f115;
	sub.f32 	%f37, %f120, %f116;
	mul.f32 	%f125, %f34, %f37;
	mul.f32 	%f126, %f35, %f36;
	sub.f32 	%f38, %f125, %f126;
	setp.eq.f32	%p4, %f38, 0f00000000;
	@%p4 bra 	BB1_8;

	rcp.rn.f32 	%f127, %f38;
	mul.f32 	%f128, %f35, %f7;
	mul.f32 	%f129, %f37, %f1;
	sub.f32 	%f130, %f129, %f128;
	mul.f32 	%f131, %f35, %f8;
	mul.f32 	%f132, %f37, %f2;
	sub.f32 	%f133, %f132, %f131;
	mul.f32 	%f134, %f35, %f9;
	mul.f32 	%f135, %f37, %f3;
	sub.f32 	%f136, %f135, %f134;
	mul.f32 	%f170, %f130, %f127;
	mul.f32 	%f169, %f133, %f127;
	mul.f32 	%f168, %f136, %f127;
	mul.f32 	%f137, %f1, %f36;
	mul.f32 	%f138, %f2, %f36;
	mul.f32 	%f139, %f3, %f36;
	mul.f32 	%f140, %f34, %f7;
	sub.f32 	%f141, %f140, %f137;
	mul.f32 	%f142, %f34, %f8;
	sub.f32 	%f143, %f142, %f138;
	mul.f32 	%f144, %f34, %f9;
	sub.f32 	%f145, %f144, %f139;
	mul.f32 	%f173, %f141, %f127;
	mul.f32 	%f172, %f143, %f127;
	mul.f32 	%f171, %f145, %f127;

BB1_8:
	ld.u64 	%rd34, [%rd11];
	ld.const.u64 	%rd35, [params+216];
	cvta.to.global.u64 	%rd36, %rd35;
	mul.wide.u32 	%rd37, %r1, 8;
	add.s64 	%rd38, %rd36, %rd37;
	st.global.u64 	[%rd38], %rd34;
	ld.const.u64 	%rd39, [params+224];
	cvta.to.global.u64 	%rd40, %rd39;
	mul.wide.u32 	%rd41, %r1, 4;
	add.s64 	%rd42, %rd40, %rd41;
	st.global.u32 	[%rd42], %r10;
	ld.const.u64 	%rd43, [params+80];
	cvta.to.global.u64 	%rd44, %rd43;
	add.s64 	%rd45, %rd44, %rd41;
	st.global.f32 	[%rd45], %f166;
	ld.const.u64 	%rd46, [params+88];
	cvta.to.global.u64 	%rd47, %rd46;
	add.s64 	%rd48, %rd47, %rd41;
	st.global.f32 	[%rd48], %f167;
	ld.const.u64 	%rd49, [params+96];
	cvta.to.global.u64 	%rd50, %rd49;
	add.s64 	%rd51, %rd50, %rd41;
	st.global.f32 	[%rd51], %f13;
	ld.const.u64 	%rd52, [params+104];
	cvta.to.global.u64 	%rd53, %rd52;
	add.s64 	%rd54, %rd53, %rd41;
	st.global.f32 	[%rd54], %f14;
	ld.const.u64 	%rd55, [params+112];
	cvta.to.global.u64 	%rd56, %rd55;
	add.s64 	%rd57, %rd56, %rd41;
	st.global.f32 	[%rd57], %f15;
	ld.const.u64 	%rd58, [params+120];
	cvta.to.global.u64 	%rd59, %rd58;
	add.s64 	%rd60, %rd59, %rd41;
	st.global.f32 	[%rd60], %f163;
	ld.const.u64 	%rd61, [params+128];
	cvta.to.global.u64 	%rd62, %rd61;
	add.s64 	%rd63, %rd62, %rd41;
	st.global.f32 	[%rd63], %f164;
	ld.const.u64 	%rd64, [params+136];
	cvta.to.global.u64 	%rd65, %rd64;
	add.s64 	%rd66, %rd65, %rd41;
	st.global.f32 	[%rd66], %f165;
	ld.const.u64 	%rd67, [params+144];
	cvta.to.global.u64 	%rd68, %rd67;
	add.s64 	%rd69, %rd68, %rd41;
	st.global.f32 	[%rd69], %f10;
	ld.const.u64 	%rd70, [params+152];
	cvta.to.global.u64 	%rd71, %rd70;
	add.s64 	%rd72, %rd71, %rd41;
	st.global.f32 	[%rd72], %f11;
	ld.const.u64 	%rd73, [params+160];
	cvta.to.global.u64 	%rd74, %rd73;
	add.s64 	%rd75, %rd74, %rd41;
	st.global.f32 	[%rd75], %f12;
	ld.const.u64 	%rd76, [params+168];
	cvta.to.global.u64 	%rd77, %rd76;
	add.s64 	%rd78, %rd77, %rd41;
	st.global.f32 	[%rd78], %f170;
	ld.const.u64 	%rd79, [params+176];
	cvta.to.global.u64 	%rd80, %rd79;
	add.s64 	%rd81, %rd80, %rd41;
	st.global.f32 	[%rd81], %f169;
	ld.const.u64 	%rd82, [params+184];
	cvta.to.global.u64 	%rd83, %rd82;
	add.s64 	%rd84, %rd83, %rd41;
	st.global.f32 	[%rd84], %f168;
	ld.const.u64 	%rd85, [params+192];
	cvta.to.global.u64 	%rd86, %rd85;
	add.s64 	%rd87, %rd86, %rd41;
	st.global.f32 	[%rd87], %f173;
	ld.const.u64 	%rd88, [params+200];
	cvta.to.global.u64 	%rd89, %rd88;
	add.s64 	%rd90, %rd89, %rd41;
	st.global.f32 	[%rd90], %f172;
	ld.const.u64 	%rd91, [params+208];
	cvta.to.global.u64 	%rd92, %rd91;
	add.s64 	%rd93, %rd92, %rd41;
	st.global.f32 	[%rd93], %f171;
	// inline asm
	call (%f146), _optix_get_world_ray_origin_x, ();
	// inline asm
	// inline asm
	call (%f147), _optix_get_world_ray_origin_y, ();
	// inline asm
	// inline asm
	call (%f148), _optix_get_world_ray_origin_z, ();
	// inline asm
	// inline asm
	call (%f149), _optix_get_world_ray_direction_x, ();
	// inline asm
	// inline asm
	call (%f150), _optix_get_world_ray_direction_y, ();
	// inline asm
	// inline asm
	call (%f151), _optix_get_world_ray_direction_z, ();
	// inline asm
	sub.f32 	%f152, %f10, %f146;
	sub.f32 	%f153, %f11, %f147;
	sub.f32 	%f154, %f12, %f148;
	mul.f32 	%f155, %f153, %f153;
	fma.rn.f32 	%f156, %f152, %f152, %f155;
	fma.rn.f32 	%f157, %f154, %f154, %f156;
	mul.f32 	%f158, %f150, %f150;
	fma.rn.f32 	%f159, %f149, %f149, %f158;
	fma.rn.f32 	%f160, %f151, %f151, %f159;
	div.rn.f32 	%f161, %f157, %f160;
	sqrt.rn.f32 	%f162, %f161;
	ld.const.u64 	%rd94, [params+72];
	cvta.to.global.u64 	%rd95, %rd94;
	add.s64 	%rd96, %rd95, %rd41;
	st.global.f32 	[%rd96], %f162;

BB1_9:
	ret;
}

	// .globl	__miss__ms
.visible .entry __miss__ms(

)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<10>;
	.reg .b64 	%rd<14>;


	// inline asm
	call (%r1), _optix_get_launch_dimension_x, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_launch_dimension_y, ();
	// inline asm
	// inline asm
	call (%r4), _optix_get_launch_index_x, ();
	// inline asm
	// inline asm
	call (%r5), _optix_get_launch_index_y, ();
	// inline asm
	// inline asm
	call (%r6), _optix_get_launch_index_z, ();
	// inline asm
	mad.lo.s32 	%r7, %r6, %r2, %r5;
	mad.lo.s32 	%r8, %r7, %r1, %r4;
	ld.const.u64 	%rd1, [params+232];
	setp.eq.s64	%p1, %rd1, 0;
	cvt.u64.u32	%rd2, %r8;
	@%p1 bra 	BB2_2;

	cvta.to.global.u64 	%rd3, %rd1;
	add.s64 	%rd4, %rd3, %rd2;
	mov.u16 	%rs1, 0;
	st.global.u8 	[%rd4], %rs1;
	bra.uni 	BB2_3;

BB2_2:
	ld.const.u64 	%rd5, [params+216];
	cvta.to.global.u64 	%rd6, %rd5;
	shl.b64 	%rd7, %rd2, 3;
	add.s64 	%rd8, %rd6, %rd7;
	mov.u64 	%rd9, 0;
	st.global.u64 	[%rd8], %rd9;
	ld.const.u64 	%rd10, [params+72];
	cvta.to.global.u64 	%rd11, %rd10;
	shl.b64 	%rd12, %rd2, 2;
	add.s64 	%rd13, %rd11, %rd12;
	mov.u32 	%r9, 2139095040;
	st.global.u32 	[%rd13], %r9;

BB2_3:
	ret;
}

	// .globl	__exception__err
.visible .entry __exception__err(

)
{
	.local .align 16 .b8 	__local_depot3[16];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .b32 	%r<3>;
	.reg .b64 	%rd<9>;


	mov.u64 	%SPL, __local_depot3;
	cvta.local.u64 	%SP, %SPL;
	// inline asm
	call (%r1), _optix_get_exception_code, ();
	// inline asm
	mul.wide.s32 	%rd1, %r1, 16;
	mov.u64 	%rd2, exceptions;
	add.s64 	%rd3, %rd2, %rd1;
	ld.const.u64 	%rd4, [%rd3+8];
	add.u64 	%rd5, %SP, 0;
	add.u64 	%rd6, %SPL, 0;
	st.local.u32 	[%rd6], %r1;
	st.local.u64 	[%rd6+8], %rd4;
	mov.u64 	%rd7, $str8;
	cvta.global.u64 	%rd8, %rd7;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd8;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd5;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r2, [retval0+0];
	
	//{
	}// Callseq End 0
	ret;
}


