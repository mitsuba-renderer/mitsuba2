//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-26907403
// Cuda compilation tools, release 10.1, V10.1.243
// Based on LLVM 3.4svn
//

.version 6.4
.target sm_50
.address_size 64

	// .globl	_Z15ray_gen_closestv
.extern .func  (.param .b32 func_retval0) vprintf
(
	.param .b64 vprintf_param_0,
	.param .b64 vprintf_param_1
)
;
.global .align 4 .b8 top_object[4];
.global .align 8 .u64 accel;
.global .align 8 .u64 shape_ptr;
.global .align 4 .u32 launch_index;
.global .align 4 .b8 p[12];
.global .align 8 .b8 uv[8];
.global .align 4 .b8 ns[12];
.global .align 4 .b8 ng[12];
.global .align 4 .b8 dp_du[12];
.global .align 4 .b8 dp_dv[12];
.global .align 4 .b8 ray[36];
.global .align 1 .b8 in_mask[1];
.global .align 1 .b8 in_ox[1];
.global .align 1 .b8 in_oy[1];
.global .align 1 .b8 in_oz[1];
.global .align 1 .b8 in_dx[1];
.global .align 1 .b8 in_dy[1];
.global .align 1 .b8 in_dz[1];
.global .align 1 .b8 in_mint[1];
.global .align 1 .b8 in_maxt[1];
.global .align 1 .b8 out_t[1];
.global .align 1 .b8 out_u[1];
.global .align 1 .b8 out_v[1];
.global .align 1 .b8 out_ng_x[1];
.global .align 1 .b8 out_ng_y[1];
.global .align 1 .b8 out_ng_z[1];
.global .align 1 .b8 out_ns_x[1];
.global .align 1 .b8 out_ns_y[1];
.global .align 1 .b8 out_ns_z[1];
.global .align 1 .b8 out_p_x[1];
.global .align 1 .b8 out_p_y[1];
.global .align 1 .b8 out_p_z[1];
.global .align 1 .b8 out_dp_du_x[1];
.global .align 1 .b8 out_dp_du_y[1];
.global .align 1 .b8 out_dp_du_z[1];
.global .align 1 .b8 out_dp_dv_x[1];
.global .align 1 .b8 out_dp_dv_y[1];
.global .align 1 .b8 out_dp_dv_z[1];
.global .align 1 .b8 out_shape_ptr[1];
.global .align 1 .b8 out_primitive_id[1];
.global .align 1 .b8 out_hit[1];
.global .align 4 .b8 _ZN21rti_internal_typeinfo10top_objectE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo5accelE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9shape_ptrE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12launch_indexE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo1pE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo2uvE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo2nsE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo2ngE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo5dp_duE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo5dp_dvE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3rayE[8] = {82, 97, 121, 0, 36, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 1 .b8 _ZN21rti_internal_typename10top_objectE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename5accelE[7] = {118, 111, 105, 100, 32, 42, 0};
.global .align 1 .b8 _ZN21rti_internal_typename9shape_ptrE[19] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 108, 111, 110, 103, 32, 108, 111, 110, 103, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12launch_indexE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename1pE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename2uvE[7] = {102, 108, 111, 97, 116, 50, 0};
.global .align 1 .b8 _ZN21rti_internal_typename2nsE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename2ngE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename5dp_duE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename5dp_dvE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename3rayE[4] = {82, 97, 121, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum10top_objectE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum5accelE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9shape_ptrE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12launch_indexE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum1pE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum2uvE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum2nsE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum2ngE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum5dp_duE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum5dp_dvE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3rayE = 4919;
.global .align 1 .b8 _ZN21rti_internal_semantic10top_objectE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic5accelE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9shape_ptrE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12launch_indexE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic1pE[12] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 112, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic2uvE[13] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 117, 118, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic2nsE[13] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 110, 115, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic2ngE[13] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 110, 103, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic5dp_duE[16] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 100, 112, 95, 100, 117, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic5dp_dvE[16] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 100, 112, 95, 100, 118, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic3rayE[13] = {114, 116, 67, 117, 114, 114, 101, 110, 116, 82, 97, 121, 0};
.global .align 1 .b8 _ZN23rti_internal_annotation10top_objectE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation5accelE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9shape_ptrE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12launch_indexE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation1pE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation2uvE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation2nsE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation2ngE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation5dp_duE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation5dp_dvE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3rayE[1];
.global .align 1 .b8 $str[64] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 83, 84, 65, 67, 75, 95, 79, 86, 69, 82, 70, 76, 79, 87, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 1 .b8 $str1[70] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 84, 82, 65, 67, 69, 95, 68, 69, 80, 84, 72, 95, 69, 88, 67, 69, 69, 68, 69, 68, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 1 .b8 $str2[236] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 66, 85, 70, 70, 69, 82, 95, 73, 78, 68, 69, 88, 95, 79, 85, 84, 95, 79, 70, 95, 66, 79, 85, 78, 68, 83, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 100, 105, 109, 101, 110, 115, 105, 111, 110, 97, 108, 105, 116, 121, 32, 58, 32, 37, 100, 10, 32, 32, 98, 117, 102, 102, 101, 114, 32, 100, 101, 116, 97, 105, 108, 115, 32, 58, 32, 37, 115, 10, 32, 32, 98, 117, 102, 102, 101, 114, 32, 73, 68, 32, 32, 32, 32, 32, 32, 58, 32, 37, 100, 10, 32, 32, 115, 105, 122, 101, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 108, 108, 100, 120, 37, 108, 108, 100, 120, 37, 108, 108, 100, 10, 32, 32, 101, 108, 101, 109, 101, 110, 116, 32, 115, 105, 122, 101, 32, 32, 32, 58, 32, 37, 100, 10, 32, 32, 97, 99, 99, 101, 115, 115, 101, 100, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 108, 108, 100, 44, 32, 37, 108, 108, 100, 44, 32, 37, 108, 108, 100, 10, 0};
.global .align 1 .b8 $str3[138] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 80, 82, 79, 71, 82, 65, 77, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 32, 32, 112, 114, 111, 103, 114, 97, 109, 32, 73, 68, 32, 101, 113, 117, 97, 108, 32, 116, 111, 32, 82, 84, 95, 80, 82, 79, 71, 82, 65, 77, 95, 73, 68, 95, 78, 85, 76, 76, 32, 117, 115, 101, 100, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 0};
.global .align 1 .b8 $str4[148] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 80, 82, 79, 71, 82, 65, 77, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 32, 32, 112, 114, 111, 103, 114, 97, 109, 32, 73, 68, 32, 40, 37, 100, 41, 32, 105, 115, 32, 110, 111, 116, 32, 105, 110, 32, 116, 104, 101, 32, 118, 97, 108, 105, 100, 32, 114, 97, 110, 103, 101, 32, 111, 102, 32, 91, 49, 44, 115, 105, 122, 101, 41, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 0};
.global .align 1 .b8 $str5[136] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 80, 82, 79, 71, 82, 65, 77, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 32, 32, 112, 114, 111, 103, 114, 97, 109, 32, 73, 68, 32, 40, 37, 100, 41, 32, 111, 102, 32, 97, 32, 100, 101, 108, 101, 116, 101, 100, 32, 112, 114, 111, 103, 114, 97, 109, 32, 117, 115, 101, 100, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 0};
.global .align 1 .b8 $str6[98] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 84, 69, 88, 84, 85, 82, 69, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 32, 32, 116, 101, 120, 116, 117, 114, 101, 32, 73, 68, 32, 105, 115, 32, 105, 110, 118, 97, 108, 105, 100, 32, 40, 48, 41, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 1 .b8 $str7[126] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 84, 69, 88, 84, 85, 82, 69, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 32, 32, 116, 101, 120, 116, 117, 114, 101, 32, 73, 68, 32, 40, 37, 100, 41, 32, 105, 115, 32, 110, 111, 116, 32, 105, 110, 32, 116, 104, 101, 32, 118, 97, 108, 105, 100, 32, 114, 97, 110, 103, 101, 32, 111, 102, 32, 91, 49, 44, 115, 105, 122, 101, 41, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 1 .b8 $str8[99] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 84, 69, 88, 84, 85, 82, 69, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 32, 32, 116, 101, 120, 116, 117, 114, 101, 32, 73, 68, 32, 105, 115, 32, 105, 110, 118, 97, 108, 105, 100, 32, 40, 45, 49, 41, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 1 .b8 $str9[135] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 66, 85, 70, 70, 69, 82, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 32, 32, 98, 117, 102, 102, 101, 114, 32, 73, 68, 32, 101, 113, 117, 97, 108, 32, 116, 111, 32, 82, 84, 95, 66, 85, 70, 70, 69, 82, 95, 73, 68, 95, 78, 85, 76, 76, 32, 117, 115, 101, 100, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 0};
.global .align 1 .b8 $str10[94] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 66, 85, 70, 70, 69, 82, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 32, 32, 98, 117, 102, 102, 101, 114, 32, 73, 68, 32, 40, 37, 100, 41, 32, 105, 115, 32, 110, 111, 116, 32, 105, 110, 32, 116, 104, 101, 32, 118, 97, 108, 105, 100, 32, 114, 97, 110, 103, 101, 32, 111, 102, 32, 91, 49, 44, 115, 105, 122, 101, 41, 10, 0};
.global .align 1 .b8 $str11[53] = {32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 0};
.global .align 1 .b8 $str12[133] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 66, 85, 70, 70, 69, 82, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 32, 32, 98, 117, 102, 102, 101, 114, 32, 73, 68, 32, 40, 37, 100, 41, 32, 111, 102, 32, 97, 32, 100, 101, 108, 101, 116, 101, 100, 32, 98, 117, 102, 102, 101, 114, 32, 117, 115, 101, 100, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 0};
.global .align 1 .b8 $str13[141] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 73, 78, 68, 69, 88, 95, 79, 85, 84, 95, 79, 70, 95, 66, 79, 85, 78, 68, 83, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 32, 32, 115, 105, 122, 101, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 108, 108, 100, 10, 32, 32, 97, 99, 99, 101, 115, 115, 101, 100, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 108, 108, 100, 10, 0};
.global .align 1 .b8 $str14[200] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 73, 78, 86, 65, 76, 73, 68, 95, 82, 65, 89, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 32, 32, 114, 97, 121, 32, 111, 114, 105, 103, 105, 110, 32, 32, 32, 32, 58, 32, 37, 102, 32, 37, 102, 32, 37, 102, 10, 32, 32, 114, 97, 121, 32, 100, 105, 114, 101, 99, 116, 105, 111, 110, 32, 58, 32, 37, 102, 32, 37, 102, 32, 37, 102, 10, 32, 32, 114, 97, 121, 32, 116, 121, 112, 101, 32, 32, 32, 32, 32, 32, 58, 32, 37, 100, 10, 32, 32, 114, 97, 121, 32, 116, 109, 105, 110, 32, 32, 32, 32, 32, 32, 58, 32, 37, 102, 10, 32, 32, 114, 97, 121, 32, 116, 109, 97, 120, 32, 32, 32, 32, 32, 32, 58, 32, 37, 102, 10, 0};
.global .align 1 .b8 $str15[164] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 80, 65, 89, 76, 79, 65, 68, 95, 65, 67, 67, 69, 83, 83, 95, 79, 85, 84, 95, 79, 70, 95, 66, 79, 85, 78, 68, 83, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 32, 32, 118, 97, 108, 117, 101, 32, 111, 102, 102, 115, 101, 116, 32, 58, 32, 37, 108, 108, 100, 10, 32, 32, 118, 97, 108, 117, 101, 32, 115, 105, 122, 101, 32, 32, 32, 58, 32, 37, 108, 108, 100, 10, 32, 32, 112, 97, 121, 108, 111, 97, 100, 32, 115, 105, 122, 101, 32, 58, 32, 37, 108, 108, 100, 10, 0};
.global .align 1 .b8 $str16[123] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 85, 83, 69, 82, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 67, 79, 68, 69, 95, 79, 85, 84, 95, 79, 70, 95, 66, 79, 85, 78, 68, 83, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 32, 32, 99, 111, 100, 101, 32, 32, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 100, 10, 0};
.global .align 1 .b8 $str17[57] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 85, 83, 69, 82, 43, 37, 100, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 1 .b8 $str18[64] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 73, 78, 84, 69, 82, 78, 65, 76, 95, 69, 82, 82, 79, 82, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 1 .b8 $str19[54] = {67, 97, 117, 103, 104, 116, 32, 117, 110, 107, 110, 111, 119, 110, 32, 101, 120, 99, 101, 112, 116, 105, 111, 110, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};

.visible .entry _Z15ray_gen_closestv(

)
{
	.local .align 1 .b8 	__local_depot0[1];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<17>;
	.reg .b32 	%r<29>;
	.reg .b64 	%rd<79>;


	mov.u64 	%SPL, __local_depot0;
	cvta.local.u64 	%SP, %SPL;
	ld.global.u32 	%rd3, [launch_index];
	mov.u64 	%rd55, in_ox;
	cvta.global.u64 	%rd2, %rd55;
	mov.u32 	%r18, 1;
	mov.u32 	%r16, 4;
	mov.u64 	%rd54, 0;
	// inline asm
	call (%rd1), _rt_buffer_get_64, (%rd2, %r18, %r16, %rd3, %rd54, %rd54, %rd54);
	// inline asm
	ld.f32 	%f1, [%rd1];
	ld.global.u32 	%rd9, [launch_index];
	mov.u64 	%rd56, in_oy;
	cvta.global.u64 	%rd8, %rd56;
	// inline asm
	call (%rd7), _rt_buffer_get_64, (%rd8, %r18, %r16, %rd9, %rd54, %rd54, %rd54);
	// inline asm
	ld.f32 	%f2, [%rd7];
	ld.global.u32 	%rd15, [launch_index];
	mov.u64 	%rd57, in_oz;
	cvta.global.u64 	%rd14, %rd57;
	// inline asm
	call (%rd13), _rt_buffer_get_64, (%rd14, %r18, %r16, %rd15, %rd54, %rd54, %rd54);
	// inline asm
	ld.f32 	%f3, [%rd13];
	ld.global.u32 	%rd21, [launch_index];
	mov.u64 	%rd58, in_dx;
	cvta.global.u64 	%rd20, %rd58;
	// inline asm
	call (%rd19), _rt_buffer_get_64, (%rd20, %r18, %r16, %rd21, %rd54, %rd54, %rd54);
	// inline asm
	ld.f32 	%f4, [%rd19];
	ld.global.u32 	%rd27, [launch_index];
	mov.u64 	%rd59, in_dy;
	cvta.global.u64 	%rd26, %rd59;
	// inline asm
	call (%rd25), _rt_buffer_get_64, (%rd26, %r18, %r16, %rd27, %rd54, %rd54, %rd54);
	// inline asm
	ld.f32 	%f5, [%rd25];
	ld.global.u32 	%rd33, [launch_index];
	mov.u64 	%rd60, in_dz;
	cvta.global.u64 	%rd32, %rd60;
	// inline asm
	call (%rd31), _rt_buffer_get_64, (%rd32, %r18, %r16, %rd33, %rd54, %rd54, %rd54);
	// inline asm
	ld.f32 	%f6, [%rd31];
	ld.global.u32 	%rd39, [launch_index];
	mov.u64 	%rd61, in_mint;
	cvta.global.u64 	%rd38, %rd61;
	// inline asm
	call (%rd37), _rt_buffer_get_64, (%rd38, %r18, %r16, %rd39, %rd54, %rd54, %rd54);
	// inline asm
	ld.f32 	%f7, [%rd37];
	ld.global.u32 	%rd45, [launch_index];
	mov.u64 	%rd62, in_maxt;
	cvta.global.u64 	%rd44, %rd62;
	// inline asm
	call (%rd43), _rt_buffer_get_64, (%rd44, %r18, %r16, %rd45, %rd54, %rd54, %rd54);
	// inline asm
	ld.f32 	%f8, [%rd43];
	ld.global.u32 	%rd51, [launch_index];
	mov.u64 	%rd63, in_mask;
	cvta.global.u64 	%rd50, %rd63;
	// inline asm
	call (%rd49), _rt_buffer_get_64, (%rd50, %r18, %r18, %rd51, %rd54, %rd54, %rd54);
	// inline asm
	ld.u8 	%rs1, [%rd49];
	setp.eq.s16	%p1, %rs1, 0;
	@%p1 bra 	BB0_2;

	ld.global.u32 	%r19, [top_object];
	mov.u32 	%r21, 255;
	mov.u32 	%r22, 0;
	add.u64 	%rd64, %SP, 0;
	// inline asm
	call _rt_trace_mask_flags_64, (%r19, %f1, %f2, %f3, %f4, %f5, %f6, %r22, %f7, %f8, %r21, %r22, %rd64, %r18);
	// inline asm
	bra.uni 	BB0_3;

BB0_2:
	ld.global.u32 	%rd67, [launch_index];
	mov.u64 	%rd77, out_shape_ptr;
	cvta.global.u64 	%rd66, %rd77;
	mov.u32 	%r25, 8;
	// inline asm
	call (%rd65), _rt_buffer_get_64, (%rd66, %r18, %r25, %rd67, %rd54, %rd54, %rd54);
	// inline asm
	st.u64 	[%rd65], %rd54;
	ld.global.u32 	%rd73, [launch_index];
	mov.u64 	%rd78, out_t;
	cvta.global.u64 	%rd72, %rd78;
	// inline asm
	call (%rd71), _rt_buffer_get_64, (%rd72, %r18, %r16, %rd73, %rd54, %rd54, %rd54);
	// inline asm
	mov.u32 	%r28, 2139095040;
	st.u32 	[%rd71], %r28;

BB0_3:
	ret;
}

	// .globl	_Z11ray_gen_anyv
.visible .entry _Z11ray_gen_anyv(

)
{
	.local .align 1 .b8 	__local_depot1[1];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<3>;
	.reg .f32 	%f<17>;
	.reg .b32 	%r<26>;
	.reg .b64 	%rd<72>;


	mov.u64 	%SPL, __local_depot1;
	cvta.local.u64 	%SP, %SPL;
	ld.global.u32 	%rd3, [launch_index];
	mov.u64 	%rd55, in_ox;
	cvta.global.u64 	%rd2, %rd55;
	mov.u32 	%r18, 1;
	mov.u32 	%r16, 4;
	mov.u64 	%rd54, 0;
	// inline asm
	call (%rd1), _rt_buffer_get_64, (%rd2, %r18, %r16, %rd3, %rd54, %rd54, %rd54);
	// inline asm
	ld.f32 	%f1, [%rd1];
	ld.global.u32 	%rd9, [launch_index];
	mov.u64 	%rd56, in_oy;
	cvta.global.u64 	%rd8, %rd56;
	// inline asm
	call (%rd7), _rt_buffer_get_64, (%rd8, %r18, %r16, %rd9, %rd54, %rd54, %rd54);
	// inline asm
	ld.f32 	%f2, [%rd7];
	ld.global.u32 	%rd15, [launch_index];
	mov.u64 	%rd57, in_oz;
	cvta.global.u64 	%rd14, %rd57;
	// inline asm
	call (%rd13), _rt_buffer_get_64, (%rd14, %r18, %r16, %rd15, %rd54, %rd54, %rd54);
	// inline asm
	ld.f32 	%f3, [%rd13];
	ld.global.u32 	%rd21, [launch_index];
	mov.u64 	%rd58, in_dx;
	cvta.global.u64 	%rd20, %rd58;
	// inline asm
	call (%rd19), _rt_buffer_get_64, (%rd20, %r18, %r16, %rd21, %rd54, %rd54, %rd54);
	// inline asm
	ld.f32 	%f4, [%rd19];
	ld.global.u32 	%rd27, [launch_index];
	mov.u64 	%rd59, in_dy;
	cvta.global.u64 	%rd26, %rd59;
	// inline asm
	call (%rd25), _rt_buffer_get_64, (%rd26, %r18, %r16, %rd27, %rd54, %rd54, %rd54);
	// inline asm
	ld.f32 	%f5, [%rd25];
	ld.global.u32 	%rd33, [launch_index];
	mov.u64 	%rd60, in_dz;
	cvta.global.u64 	%rd32, %rd60;
	// inline asm
	call (%rd31), _rt_buffer_get_64, (%rd32, %r18, %r16, %rd33, %rd54, %rd54, %rd54);
	// inline asm
	ld.f32 	%f6, [%rd31];
	ld.global.u32 	%rd39, [launch_index];
	mov.u64 	%rd61, in_mint;
	cvta.global.u64 	%rd38, %rd61;
	// inline asm
	call (%rd37), _rt_buffer_get_64, (%rd38, %r18, %r16, %rd39, %rd54, %rd54, %rd54);
	// inline asm
	ld.f32 	%f7, [%rd37];
	ld.global.u32 	%rd45, [launch_index];
	mov.u64 	%rd62, in_maxt;
	cvta.global.u64 	%rd44, %rd62;
	// inline asm
	call (%rd43), _rt_buffer_get_64, (%rd44, %r18, %r16, %rd45, %rd54, %rd54, %rd54);
	// inline asm
	ld.f32 	%f8, [%rd43];
	ld.global.u32 	%rd51, [launch_index];
	mov.u64 	%rd63, in_mask;
	cvta.global.u64 	%rd50, %rd63;
	// inline asm
	call (%rd49), _rt_buffer_get_64, (%rd50, %r18, %r18, %rd51, %rd54, %rd54, %rd54);
	// inline asm
	ld.u8 	%rs1, [%rd49];
	setp.eq.s16	%p1, %rs1, 0;
	@%p1 bra 	BB1_2;

	ld.global.u32 	%r19, [top_object];
	mov.u32 	%r20, 0;
	mov.u32 	%r21, 255;
	add.u64 	%rd64, %SP, 0;
	// inline asm
	call _rt_trace_mask_flags_64, (%r19, %f1, %f2, %f3, %f4, %f5, %f6, %r20, %f7, %f8, %r21, %r16, %rd64, %r18);
	// inline asm
	bra.uni 	BB1_3;

BB1_2:
	ld.global.u32 	%rd67, [launch_index];
	mov.u64 	%rd71, out_hit;
	cvta.global.u64 	%rd66, %rd71;
	// inline asm
	call (%rd65), _rt_buffer_get_64, (%rd66, %r18, %r18, %rd67, %rd54, %rd54, %rd54);
	// inline asm
	mov.u16 	%rs2, 0;
	st.u8 	[%rd65], %rs2;

BB1_3:
	ret;
}

	// .globl	_Z7ray_hitv
.visible .entry _Z7ray_hitv(

)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<38>;
	.reg .b32 	%r<47>;
	.reg .b64 	%rd<155>;


	mov.u64 	%rd6, out_hit;
	cvta.global.u64 	%rd5, %rd6;
	mov.u32 	%r2, 1;
	// inline asm
	call (%rd1, %rd2, %rd3, %rd4), _rt_buffer_get_size_64, (%rd5, %r2, %r2);
	// inline asm
	cvt.u32.u64	%r3, %rd1;
	setp.eq.s32	%p1, %r3, 0;
	@%p1 bra 	BB2_2;

	ld.global.u32 	%rd9, [launch_index];
	mov.u64 	%rd12, 0;
	// inline asm
	call (%rd7), _rt_buffer_get_64, (%rd5, %r2, %r2, %rd9, %rd12, %rd12, %rd12);
	// inline asm
	mov.u16 	%rs1, 1;
	st.u8 	[%rd7], %rs1;
	bra.uni 	BB2_3;

BB2_2:
	ld.global.u64 	%rd134, [shape_ptr];
	ld.global.u32 	%rd16, [launch_index];
	mov.u64 	%rd135, out_shape_ptr;
	cvta.global.u64 	%rd15, %rd135;
	mov.u32 	%r7, 8;
	mov.u64 	%rd133, 0;
	// inline asm
	call (%rd14), _rt_buffer_get_64, (%rd15, %r2, %r7, %rd16, %rd133, %rd133, %rd133);
	// inline asm
	st.u64 	[%rd14], %rd134;
	// inline asm
	call (%r8), _rt_get_primitive_index, ();
	// inline asm
	ld.global.u32 	%rd22, [launch_index];
	mov.u64 	%rd136, out_primitive_id;
	cvta.global.u64 	%rd21, %rd136;
	mov.u32 	%r46, 4;
	// inline asm
	call (%rd20), _rt_buffer_get_64, (%rd21, %r2, %r46, %rd22, %rd133, %rd133, %rd133);
	// inline asm
	st.u32 	[%rd20], %r8;
	ld.global.f32 	%f1, [uv];
	ld.global.u32 	%rd28, [launch_index];
	mov.u64 	%rd137, out_u;
	cvta.global.u64 	%rd27, %rd137;
	// inline asm
	call (%rd26), _rt_buffer_get_64, (%rd27, %r2, %r46, %rd28, %rd133, %rd133, %rd133);
	// inline asm
	st.f32 	[%rd26], %f1;
	ld.global.f32 	%f2, [uv+4];
	ld.global.u32 	%rd34, [launch_index];
	mov.u64 	%rd138, out_v;
	cvta.global.u64 	%rd33, %rd138;
	// inline asm
	call (%rd32), _rt_buffer_get_64, (%rd33, %r2, %r46, %rd34, %rd133, %rd133, %rd133);
	// inline asm
	st.f32 	[%rd32], %f2;
	ld.global.f32 	%f3, [ng];
	ld.global.u32 	%rd40, [launch_index];
	mov.u64 	%rd139, out_ng_x;
	cvta.global.u64 	%rd39, %rd139;
	// inline asm
	call (%rd38), _rt_buffer_get_64, (%rd39, %r2, %r46, %rd40, %rd133, %rd133, %rd133);
	// inline asm
	st.f32 	[%rd38], %f3;
	ld.global.f32 	%f4, [ng+4];
	ld.global.u32 	%rd46, [launch_index];
	mov.u64 	%rd140, out_ng_y;
	cvta.global.u64 	%rd45, %rd140;
	// inline asm
	call (%rd44), _rt_buffer_get_64, (%rd45, %r2, %r46, %rd46, %rd133, %rd133, %rd133);
	// inline asm
	st.f32 	[%rd44], %f4;
	ld.global.f32 	%f5, [ng+8];
	ld.global.u32 	%rd52, [launch_index];
	mov.u64 	%rd141, out_ng_z;
	cvta.global.u64 	%rd51, %rd141;
	// inline asm
	call (%rd50), _rt_buffer_get_64, (%rd51, %r2, %r46, %rd52, %rd133, %rd133, %rd133);
	// inline asm
	st.f32 	[%rd50], %f5;
	ld.global.f32 	%f6, [ns];
	ld.global.u32 	%rd58, [launch_index];
	mov.u64 	%rd142, out_ns_x;
	cvta.global.u64 	%rd57, %rd142;
	// inline asm
	call (%rd56), _rt_buffer_get_64, (%rd57, %r2, %r46, %rd58, %rd133, %rd133, %rd133);
	// inline asm
	st.f32 	[%rd56], %f6;
	ld.global.f32 	%f7, [ns+4];
	ld.global.u32 	%rd64, [launch_index];
	mov.u64 	%rd143, out_ns_y;
	cvta.global.u64 	%rd63, %rd143;
	// inline asm
	call (%rd62), _rt_buffer_get_64, (%rd63, %r2, %r46, %rd64, %rd133, %rd133, %rd133);
	// inline asm
	st.f32 	[%rd62], %f7;
	ld.global.f32 	%f8, [ns+8];
	ld.global.u32 	%rd70, [launch_index];
	mov.u64 	%rd144, out_ns_z;
	cvta.global.u64 	%rd69, %rd144;
	// inline asm
	call (%rd68), _rt_buffer_get_64, (%rd69, %r2, %r46, %rd70, %rd133, %rd133, %rd133);
	// inline asm
	st.f32 	[%rd68], %f8;
	ld.global.f32 	%f9, [p];
	ld.global.u32 	%rd76, [launch_index];
	mov.u64 	%rd145, out_p_x;
	cvta.global.u64 	%rd75, %rd145;
	// inline asm
	call (%rd74), _rt_buffer_get_64, (%rd75, %r2, %r46, %rd76, %rd133, %rd133, %rd133);
	// inline asm
	st.f32 	[%rd74], %f9;
	ld.global.f32 	%f10, [p+4];
	ld.global.u32 	%rd82, [launch_index];
	mov.u64 	%rd146, out_p_y;
	cvta.global.u64 	%rd81, %rd146;
	// inline asm
	call (%rd80), _rt_buffer_get_64, (%rd81, %r2, %r46, %rd82, %rd133, %rd133, %rd133);
	// inline asm
	st.f32 	[%rd80], %f10;
	ld.global.f32 	%f11, [p+8];
	ld.global.u32 	%rd88, [launch_index];
	mov.u64 	%rd147, out_p_z;
	cvta.global.u64 	%rd87, %rd147;
	// inline asm
	call (%rd86), _rt_buffer_get_64, (%rd87, %r2, %r46, %rd88, %rd133, %rd133, %rd133);
	// inline asm
	st.f32 	[%rd86], %f11;
	ld.global.f32 	%f12, [dp_du];
	ld.global.u32 	%rd94, [launch_index];
	mov.u64 	%rd148, out_dp_du_x;
	cvta.global.u64 	%rd93, %rd148;
	// inline asm
	call (%rd92), _rt_buffer_get_64, (%rd93, %r2, %r46, %rd94, %rd133, %rd133, %rd133);
	// inline asm
	st.f32 	[%rd92], %f12;
	ld.global.f32 	%f13, [dp_du+4];
	ld.global.u32 	%rd100, [launch_index];
	mov.u64 	%rd149, out_dp_du_y;
	cvta.global.u64 	%rd99, %rd149;
	// inline asm
	call (%rd98), _rt_buffer_get_64, (%rd99, %r2, %r46, %rd100, %rd133, %rd133, %rd133);
	// inline asm
	st.f32 	[%rd98], %f13;
	ld.global.f32 	%f14, [dp_du+8];
	ld.global.u32 	%rd106, [launch_index];
	mov.u64 	%rd150, out_dp_du_z;
	cvta.global.u64 	%rd105, %rd150;
	// inline asm
	call (%rd104), _rt_buffer_get_64, (%rd105, %r2, %r46, %rd106, %rd133, %rd133, %rd133);
	// inline asm
	st.f32 	[%rd104], %f14;
	ld.global.f32 	%f15, [dp_dv];
	ld.global.u32 	%rd112, [launch_index];
	mov.u64 	%rd151, out_dp_dv_x;
	cvta.global.u64 	%rd111, %rd151;
	// inline asm
	call (%rd110), _rt_buffer_get_64, (%rd111, %r2, %r46, %rd112, %rd133, %rd133, %rd133);
	// inline asm
	st.f32 	[%rd110], %f15;
	ld.global.f32 	%f16, [dp_dv+4];
	ld.global.u32 	%rd118, [launch_index];
	mov.u64 	%rd152, out_dp_dv_y;
	cvta.global.u64 	%rd117, %rd152;
	// inline asm
	call (%rd116), _rt_buffer_get_64, (%rd117, %r2, %r46, %rd118, %rd133, %rd133, %rd133);
	// inline asm
	st.f32 	[%rd116], %f16;
	ld.global.f32 	%f17, [dp_dv+8];
	ld.global.u32 	%rd124, [launch_index];
	mov.u64 	%rd153, out_dp_dv_z;
	cvta.global.u64 	%rd123, %rd153;
	// inline asm
	call (%rd122), _rt_buffer_get_64, (%rd123, %r2, %r46, %rd124, %rd133, %rd133, %rd133);
	// inline asm
	st.f32 	[%rd122], %f17;
	ld.global.f32 	%f18, [ray];
	ld.global.f32 	%f19, [p];
	sub.f32 	%f20, %f19, %f18;
	ld.global.f32 	%f21, [ray+4];
	ld.global.f32 	%f22, [p+4];
	sub.f32 	%f23, %f22, %f21;
	ld.global.f32 	%f24, [ray+8];
	ld.global.f32 	%f25, [p+8];
	sub.f32 	%f26, %f25, %f24;
	mul.f32 	%f27, %f23, %f23;
	fma.rn.f32 	%f28, %f20, %f20, %f27;
	fma.rn.f32 	%f29, %f26, %f26, %f28;
	ld.global.f32 	%f30, [ray+12];
	ld.global.f32 	%f31, [ray+16];
	ld.global.f32 	%f32, [ray+20];
	mul.f32 	%f33, %f31, %f31;
	fma.rn.f32 	%f34, %f30, %f30, %f33;
	fma.rn.f32 	%f35, %f32, %f32, %f34;
	div.rn.f32 	%f36, %f29, %f35;
	sqrt.rn.f32 	%f37, %f36;
	ld.global.u32 	%rd130, [launch_index];
	mov.u64 	%rd154, out_t;
	cvta.global.u64 	%rd129, %rd154;
	// inline asm
	call (%rd128), _rt_buffer_get_64, (%rd129, %r2, %r46, %rd130, %rd133, %rd133, %rd133);
	// inline asm
	st.f32 	[%rd128], %f37;

BB2_3:
	ret;
}

	// .globl	_Z8ray_missv
.visible .entry _Z8ray_missv(

)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<11>;
	.reg .b64 	%rd<29>;


	mov.u64 	%rd7, out_hit;
	cvta.global.u64 	%rd6, %rd7;
	mov.u32 	%r2, 1;
	// inline asm
	call (%rd2, %rd3, %rd4, %rd5), _rt_buffer_get_size_64, (%rd6, %r2, %r2);
	// inline asm
	cvt.u32.u64	%r3, %rd2;
	setp.eq.s32	%p1, %r3, 0;
	ld.global.u32 	%rd1, [launch_index];
	@%p1 bra 	BB3_2;

	mov.u64 	%rd13, 0;
	// inline asm
	call (%rd8), _rt_buffer_get_64, (%rd6, %r2, %r2, %rd1, %rd13, %rd13, %rd13);
	// inline asm
	mov.u16 	%rs1, 0;
	st.u8 	[%rd8], %rs1;
	bra.uni 	BB3_3;

BB3_2:
	mov.u64 	%rd27, out_shape_ptr;
	cvta.global.u64 	%rd16, %rd27;
	mov.u32 	%r7, 8;
	mov.u64 	%rd26, 0;
	// inline asm
	call (%rd15), _rt_buffer_get_64, (%rd16, %r2, %r7, %rd1, %rd26, %rd26, %rd26);
	// inline asm
	st.u64 	[%rd15], %rd26;
	ld.global.u32 	%rd23, [launch_index];
	mov.u64 	%rd28, out_t;
	cvta.global.u64 	%rd22, %rd28;
	mov.u32 	%r9, 4;
	// inline asm
	call (%rd21), _rt_buffer_get_64, (%rd22, %r2, %r9, %rd23, %rd26, %rd26, %rd26);
	// inline asm
	mov.u32 	%r10, 2139095040;
	st.u32 	[%rd21], %r10;

BB3_3:
	ret;
}

	// .globl	_Z7ray_errv
.visible .entry _Z7ray_errv(

)
{
	.local .align 16 .b8 	__local_depot4[400];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<43>;
	.reg .f32 	%f<9>;
	.reg .b32 	%r<118>;
	.reg .f64 	%fd<9>;
	.reg .b64 	%rd<114>;


	mov.u64 	%SPL, __local_depot4;
	cvta.local.u64 	%SP, %SPL;
	// inline asm
	call (%r75), _rt_get_exception_code, ();
	// inline asm
	setp.eq.s32	%p1, %r75, 1020;
	@%p1 bra 	BB4_61;
	bra.uni 	BB4_1;

BB4_61:
	ld.volatile.global.u32 	%r72, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r73, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r74, [_ZN21rti_internal_register14reg_rayIndex_zE];
	// inline asm
	call (%r115), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p42, %r115, 0;
	@%p42 bra 	BB4_63;

	add.u64 	%rd108, %SP, 384;
	add.u64 	%rd109, %SPL, 384;
	st.local.v2.u32 	[%rd109], {%r72, %r73};
	st.local.u32 	[%rd109+8], %r74;
	mov.u64 	%rd110, $str;
	cvta.global.u64 	%rd111, %rd110;
	// Callseq Start 18
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd111;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd108;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r116, [retval0+0];
	
	//{
	}// Callseq End 18
	bra.uni 	BB4_63;

BB4_1:
	setp.eq.s32	%p2, %r75, 1005;
	@%p2 bra 	BB4_59;
	bra.uni 	BB4_2;

BB4_59:
	ld.volatile.global.u32 	%r69, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r70, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r71, [_ZN21rti_internal_register14reg_rayIndex_zE];
	// inline asm
	call (%r113), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p41, %r113, 0;
	@%p41 bra 	BB4_63;

	add.u64 	%rd104, %SP, 384;
	add.u64 	%rd105, %SPL, 384;
	st.local.v2.u32 	[%rd105], {%r69, %r70};
	st.local.u32 	[%rd105+8], %r71;
	mov.u64 	%rd106, $str1;
	cvta.global.u64 	%rd107, %rd106;
	// Callseq Start 17
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd107;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd104;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r114, [retval0+0];
	
	//{
	}// Callseq End 17
	bra.uni 	BB4_63;

BB4_2:
	setp.eq.s32	%p3, %r75, 1021;
	@%p3 bra 	BB4_53;
	bra.uni 	BB4_3;

BB4_53:
	ld.volatile.global.u32 	%r63, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r64, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r65, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r66, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd18, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	ld.volatile.global.u32 	%r67, [_ZN21rti_internal_register21reg_exception_detail2E];
	ld.volatile.global.u64 	%rd19, [_ZN21rti_internal_register24reg_exception_64_detail1E];
	mov.u64 	%rd113, 1;
	setp.lt.u32	%p38, %r63, 2;
	mov.u64 	%rd112, %rd113;
	@%p38 bra 	BB4_55;

	ld.volatile.global.u64 	%rd112, [_ZN21rti_internal_register24reg_exception_64_detail2E];

BB4_55:
	setp.lt.u32	%p39, %r63, 3;
	@%p39 bra 	BB4_57;

	ld.volatile.global.u64 	%rd113, [_ZN21rti_internal_register24reg_exception_64_detail3E];

BB4_57:
	ld.volatile.global.u32 	%r68, [_ZN21rti_internal_register21reg_exception_detail1E];
	ld.volatile.global.u64 	%rd24, [_ZN21rti_internal_register24reg_exception_64_detail4E];
	ld.volatile.global.u64 	%rd25, [_ZN21rti_internal_register24reg_exception_64_detail5E];
	ld.volatile.global.u64 	%rd26, [_ZN21rti_internal_register24reg_exception_64_detail6E];
	// inline asm
	call (%r111), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p40, %r111, 0;
	@%p40 bra 	BB4_63;

	add.u64 	%rd100, %SP, 296;
	add.u64 	%rd101, %SPL, 296;
	st.local.v2.u32 	[%rd101], {%r64, %r65};
	st.local.u32 	[%rd101+24], %r67;
	st.local.u32 	[%rd101+56], %r68;
	st.local.v2.u32 	[%rd101+8], {%r66, %r63};
	st.local.u64 	[%rd101+16], %rd18;
	st.local.u64 	[%rd101+32], %rd19;
	st.local.u64 	[%rd101+40], %rd112;
	st.local.u64 	[%rd101+48], %rd113;
	st.local.u64 	[%rd101+64], %rd24;
	st.local.u64 	[%rd101+72], %rd25;
	st.local.u64 	[%rd101+80], %rd26;
	mov.u64 	%rd102, $str2;
	cvta.global.u64 	%rd103, %rd102;
	// Callseq Start 16
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd103;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd100;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r112, [retval0+0];
	
	//{
	}// Callseq End 16

BB4_63:
	ret;

BB4_3:
	setp.eq.s32	%p4, %r75, 1006;
	add.u64 	%rd27, %SP, 272;
	add.u64 	%rd28, %SPL, 272;
	add.s64 	%rd1, %rd28, 4;
	@%p4 bra 	BB4_44;
	bra.uni 	BB4_4;

BB4_44:
	ld.volatile.global.u32 	%r104, [_ZN21rti_internal_register21reg_exception_detail1E];
	setp.eq.s32	%p32, %r104, 1;
	@%p32 bra 	BB4_51;

	setp.eq.s32	%p33, %r104, 2;
	@%p33 bra 	BB4_49;
	bra.uni 	BB4_46;

BB4_49:
	ld.volatile.global.u32 	%r56, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r57, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r58, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r59, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd16, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	// inline asm
	call (%r107), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p36, %r107, 0;
	@%p36 bra 	BB4_63;

	st.local.u32 	[%rd28], %r56;
	st.local.u32 	[%rd1], %r57;
	st.local.v2.u32 	[%rd1+4], {%r58, %r59};
	st.local.u64 	[%rd1+12], %rd16;
	mov.u64 	%rd92, $str4;
	cvta.global.u64 	%rd93, %rd92;
	// Callseq Start 14
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd93;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r108, [retval0+0];
	
	//{
	}// Callseq End 14
	bra.uni 	BB4_63;

BB4_4:
	setp.eq.s32	%p5, %r75, 1007;
	add.u64 	%rd29, %SP, 256;
	add.u64 	%rd30, %SPL, 256;
	add.s64 	%rd2, %rd30, 4;
	@%p5 bra 	BB4_35;
	bra.uni 	BB4_5;

BB4_35:
	ld.volatile.global.u32 	%r97, [_ZN21rti_internal_register21reg_exception_detail1E];
	setp.eq.s32	%p26, %r97, 1;
	@%p26 bra 	BB4_42;

	setp.eq.s32	%p27, %r97, 2;
	@%p27 bra 	BB4_40;
	bra.uni 	BB4_37;

BB4_40:
	ld.volatile.global.u32 	%r45, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r46, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r47, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r48, [_ZN21rti_internal_register14reg_rayIndex_zE];
	// inline asm
	call (%r100), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p30, %r100, 0;
	@%p30 bra 	BB4_63;

	st.local.u32 	[%rd30], %r45;
	st.local.u32 	[%rd2], %r46;
	st.local.v2.u32 	[%rd2+4], {%r47, %r48};
	mov.u64 	%rd80, $str7;
	cvta.global.u64 	%rd81, %rd80;
	// Callseq Start 11
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd81;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd29;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r101, [retval0+0];
	
	//{
	}// Callseq End 11
	bra.uni 	BB4_63;

BB4_5:
	setp.eq.s32	%p6, %r75, 1018;
	@%p6 bra 	BB4_26;
	bra.uni 	BB4_6;

BB4_26:
	ld.volatile.global.u32 	%r90, [_ZN21rti_internal_register21reg_exception_detail1E];
	setp.eq.s32	%p20, %r90, 1;
	@%p20 bra 	BB4_33;

	setp.eq.s32	%p21, %r90, 2;
	@%p21 bra 	BB4_31;
	bra.uni 	BB4_28;

BB4_31:
	ld.volatile.global.u32 	%r35, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r36, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r37, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r38, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd13, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	// inline asm
	call (%r93), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p24, %r93, 0;
	@%p24 bra 	BB4_63;

	mov.u64 	%rd64, $str11;
	cvta.global.u64 	%rd65, %rd64;
	add.u64 	%rd66, %SP, 224;
	add.u64 	%rd67, %SPL, 224;
	st.local.u64 	[%rd67], %rd65;
	st.local.u64 	[%rd67+24], %rd13;
	st.local.v2.u32 	[%rd67+8], {%r35, %r36};
	st.local.v2.u32 	[%rd67+16], {%r37, %r38};
	mov.u64 	%rd68, $str10;
	cvta.global.u64 	%rd69, %rd68;
	// Callseq Start 8
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd69;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd66;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r94, [retval0+0];
	
	//{
	}// Callseq End 8
	bra.uni 	BB4_63;

BB4_51:
	ld.volatile.global.u32 	%r60, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r61, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r62, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd17, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	// inline asm
	call (%r109), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p37, %r109, 0;
	@%p37 bra 	BB4_63;

	st.local.u32 	[%rd28], %r60;
	st.local.u32 	[%rd1], %r61;
	st.local.u32 	[%rd1+4], %r62;
	st.local.u64 	[%rd1+12], %rd17;
	mov.u64 	%rd96, $str3;
	cvta.global.u64 	%rd97, %rd96;
	// Callseq Start 15
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd97;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r110, [retval0+0];
	
	//{
	}// Callseq End 15
	bra.uni 	BB4_63;

BB4_46:
	setp.ne.s32	%p34, %r104, 3;
	@%p34 bra 	BB4_63;

	ld.volatile.global.u32 	%r52, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r53, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r54, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r55, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd15, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	// inline asm
	call (%r105), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p35, %r105, 0;
	@%p35 bra 	BB4_63;

	st.local.u32 	[%rd28], %r52;
	st.local.u32 	[%rd1], %r53;
	st.local.v2.u32 	[%rd1+4], {%r54, %r55};
	st.local.u64 	[%rd1+12], %rd15;
	mov.u64 	%rd88, $str5;
	cvta.global.u64 	%rd89, %rd88;
	// Callseq Start 13
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd89;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r106, [retval0+0];
	
	//{
	}// Callseq End 13
	bra.uni 	BB4_63;

BB4_6:
	setp.eq.s32	%p7, %r75, 1019;
	@%p7 bra 	BB4_24;
	bra.uni 	BB4_7;

BB4_24:
	ld.volatile.global.u32 	%r28, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r29, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r30, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd9, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	ld.volatile.global.u64 	%rd10, [_ZN21rti_internal_register24reg_exception_64_detail1E];
	ld.volatile.global.u64 	%rd11, [_ZN21rti_internal_register24reg_exception_64_detail2E];
	// inline asm
	call (%r88), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p19, %r88, 0;
	@%p19 bra 	BB4_63;

	add.u64 	%rd56, %SP, 176;
	add.u64 	%rd57, %SPL, 176;
	st.local.v2.u32 	[%rd57], {%r28, %r29};
	st.local.u32 	[%rd57+8], %r30;
	st.local.u64 	[%rd57+16], %rd9;
	st.local.u64 	[%rd57+24], %rd10;
	st.local.u64 	[%rd57+32], %rd11;
	mov.u64 	%rd58, $str13;
	cvta.global.u64 	%rd59, %rd58;
	// Callseq Start 6
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd59;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd56;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r89, [retval0+0];
	
	//{
	}// Callseq End 6
	bra.uni 	BB4_63;

BB4_42:
	ld.volatile.global.u32 	%r49, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r50, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r51, [_ZN21rti_internal_register14reg_rayIndex_zE];
	// inline asm
	call (%r102), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p31, %r102, 0;
	@%p31 bra 	BB4_63;

	add.u64 	%rd82, %SP, 384;
	add.u64 	%rd83, %SPL, 384;
	st.local.v2.u32 	[%rd83], {%r49, %r50};
	st.local.u32 	[%rd83+8], %r51;
	mov.u64 	%rd84, $str6;
	cvta.global.u64 	%rd85, %rd84;
	// Callseq Start 12
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd85;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd82;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r103, [retval0+0];
	
	//{
	}// Callseq End 12
	bra.uni 	BB4_63;

BB4_37:
	setp.ne.s32	%p28, %r97, 3;
	@%p28 bra 	BB4_63;

	ld.volatile.global.u32 	%r42, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r43, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r44, [_ZN21rti_internal_register14reg_rayIndex_zE];
	// inline asm
	call (%r98), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p29, %r98, 0;
	@%p29 bra 	BB4_63;

	add.u64 	%rd74, %SP, 384;
	add.u64 	%rd75, %SPL, 384;
	st.local.v2.u32 	[%rd75], {%r42, %r43};
	st.local.u32 	[%rd75+8], %r44;
	mov.u64 	%rd76, $str8;
	cvta.global.u64 	%rd77, %rd76;
	// Callseq Start 10
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd77;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd74;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r99, [retval0+0];
	
	//{
	}// Callseq End 10
	bra.uni 	BB4_63;

BB4_7:
	setp.eq.s32	%p8, %r75, 1022;
	@%p8 bra 	BB4_22;
	bra.uni 	BB4_8;

BB4_22:
	ld.volatile.global.u32 	%r16, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r17, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r18, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd8, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	ld.volatile.global.u32 	%r19, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r20, [_ZN21rti_internal_register21reg_exception_detail1E];
	ld.volatile.global.u32 	%r21, [_ZN21rti_internal_register21reg_exception_detail2E];
	ld.volatile.global.u32 	%r22, [_ZN21rti_internal_register21reg_exception_detail3E];
	ld.volatile.global.u32 	%r23, [_ZN21rti_internal_register21reg_exception_detail4E];
	ld.volatile.global.u32 	%r24, [_ZN21rti_internal_register21reg_exception_detail5E];
	ld.volatile.global.u32 	%r25, [_ZN21rti_internal_register21reg_exception_detail6E];
	ld.volatile.global.u32 	%r26, [_ZN21rti_internal_register21reg_exception_detail7E];
	ld.volatile.global.u32 	%r27, [_ZN21rti_internal_register21reg_exception_detail8E];
	// inline asm
	call (%r86), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p18, %r86, 0;
	@%p18 bra 	BB4_63;

	mov.b32 	 %f1, %r19;
	cvt.f64.f32	%fd1, %f1;
	mov.b32 	 %f2, %r20;
	mov.b32 	 %f3, %r21;
	mov.b32 	 %f4, %r22;
	mov.b32 	 %f5, %r23;
	mov.b32 	 %f6, %r24;
	cvt.f64.f32	%fd2, %f6;
	mov.b32 	 %f7, %r26;
	mov.b32 	 %f8, %r27;
	add.u64 	%rd51, %SP, 80;
	add.u64 	%rd52, %SPL, 80;
	st.local.v2.u32 	[%rd52], {%r16, %r17};
	st.local.u32 	[%rd52+8], %r18;
	mov.b64 	 %rd53, %fd1;
	st.local.u32 	[%rd52+72], %r25;
	st.local.v2.u64 	[%rd52+16], {%rd8, %rd53};
	cvt.f64.f32	%fd3, %f3;
	cvt.f64.f32	%fd4, %f2;
	st.local.v2.f64 	[%rd52+32], {%fd4, %fd3};
	cvt.f64.f32	%fd5, %f5;
	cvt.f64.f32	%fd6, %f4;
	st.local.v2.f64 	[%rd52+48], {%fd6, %fd5};
	st.local.f64 	[%rd52+64], %fd2;
	cvt.f64.f32	%fd7, %f8;
	cvt.f64.f32	%fd8, %f7;
	st.local.v2.f64 	[%rd52+80], {%fd8, %fd7};
	mov.u64 	%rd54, $str14;
	cvta.global.u64 	%rd55, %rd54;
	// Callseq Start 5
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd55;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd51;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r87, [retval0+0];
	
	//{
	}// Callseq End 5
	bra.uni 	BB4_63;

BB4_33:
	ld.volatile.global.u32 	%r39, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r40, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r41, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd14, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	// inline asm
	call (%r95), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p25, %r95, 0;
	@%p25 bra 	BB4_63;

	st.local.u32 	[%rd28], %r39;
	st.local.u32 	[%rd1], %r40;
	st.local.u32 	[%rd1+4], %r41;
	st.local.u64 	[%rd1+12], %rd14;
	mov.u64 	%rd72, $str9;
	cvta.global.u64 	%rd73, %rd72;
	// Callseq Start 9
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd73;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r96, [retval0+0];
	
	//{
	}// Callseq End 9
	bra.uni 	BB4_63;

BB4_28:
	setp.ne.s32	%p22, %r90, 3;
	@%p22 bra 	BB4_63;

	ld.volatile.global.u32 	%r31, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r32, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r33, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r34, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd12, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	// inline asm
	call (%r91), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p23, %r91, 0;
	@%p23 bra 	BB4_63;

	st.local.u32 	[%rd28], %r31;
	st.local.u32 	[%rd1], %r32;
	st.local.v2.u32 	[%rd1+4], {%r33, %r34};
	st.local.u64 	[%rd1+12], %rd12;
	mov.u64 	%rd62, $str12;
	cvta.global.u64 	%rd63, %rd62;
	// Callseq Start 7
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd63;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r92, [retval0+0];
	
	//{
	}// Callseq End 7
	bra.uni 	BB4_63;

BB4_8:
	setp.eq.s32	%p9, %r75, 1003;
	@%p9 bra 	BB4_20;
	bra.uni 	BB4_9;

BB4_20:
	ld.volatile.global.u32 	%r13, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r14, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r15, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd4, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	ld.volatile.global.u64 	%rd5, [_ZN21rti_internal_register24reg_exception_64_detail1E];
	ld.volatile.global.u64 	%rd6, [_ZN21rti_internal_register24reg_exception_64_detail2E];
	ld.volatile.global.u64 	%rd7, [_ZN21rti_internal_register24reg_exception_64_detail3E];
	// inline asm
	call (%r84), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p17, %r84, 0;
	@%p17 bra 	BB4_63;

	add.u64 	%rd47, %SP, 32;
	add.u64 	%rd48, %SPL, 32;
	st.local.v2.u32 	[%rd48], {%r13, %r14};
	st.local.u32 	[%rd48+8], %r15;
	st.local.v2.u64 	[%rd48+16], {%rd4, %rd5};
	st.local.v2.u64 	[%rd48+32], {%rd6, %rd7};
	mov.u64 	%rd49, $str15;
	cvta.global.u64 	%rd50, %rd49;
	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd50;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd47;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r85, [retval0+0];
	
	//{
	}// Callseq End 4
	bra.uni 	BB4_63;

BB4_9:
	setp.eq.s32	%p10, %r75, 1004;
	@%p10 bra 	BB4_18;
	bra.uni 	BB4_10;

BB4_18:
	ld.volatile.global.u32 	%r9, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r10, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r11, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd3, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	ld.volatile.global.u32 	%r12, [_ZN21rti_internal_register21reg_exception_detail0E];
	// inline asm
	call (%r82), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p16, %r82, 0;
	@%p16 bra 	BB4_63;

	add.u64 	%rd43, %SP, 0;
	add.u64 	%rd44, %SPL, 0;
	st.local.v2.u32 	[%rd44], {%r9, %r10};
	st.local.u32 	[%rd44+8], %r11;
	st.local.u32 	[%rd44+24], %r12;
	st.local.u64 	[%rd44+16], %rd3;
	mov.u64 	%rd45, $str16;
	cvta.global.u64 	%rd46, %rd45;
	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd46;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd43;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r83, [retval0+0];
	
	//{
	}// Callseq End 3
	bra.uni 	BB4_63;

BB4_10:
	add.s32 	%r2, %r75, -1024;
	setp.lt.u32	%p11, %r2, 64512;
	@%p11 bra 	BB4_16;
	bra.uni 	BB4_11;

BB4_16:
	ld.volatile.global.u32 	%r6, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r7, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r8, [_ZN21rti_internal_register14reg_rayIndex_zE];
	// inline asm
	call (%r80), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p15, %r80, 0;
	@%p15 bra 	BB4_63;

	add.s32 	%r117, %r75, -1024;
	st.local.u32 	[%rd30], %r117;
	st.local.u32 	[%rd2], %r6;
	st.local.v2.u32 	[%rd2+4], {%r7, %r8};
	mov.u64 	%rd41, $str17;
	cvta.global.u64 	%rd42, %rd41;
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd42;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd29;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r81, [retval0+0];
	
	//{
	}// Callseq End 2
	bra.uni 	BB4_63;

BB4_11:
	setp.eq.s32	%p12, %r75, 1023;
	ld.volatile.global.u32 	%r3, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r4, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r5, [_ZN21rti_internal_register14reg_rayIndex_zE];
	@%p12 bra 	BB4_14;
	bra.uni 	BB4_12;

BB4_14:
	// inline asm
	call (%r78), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p14, %r78, 0;
	@%p14 bra 	BB4_63;

	add.u64 	%rd35, %SP, 384;
	add.u64 	%rd36, %SPL, 384;
	st.local.v2.u32 	[%rd36], {%r3, %r4};
	st.local.u32 	[%rd36+8], %r5;
	mov.u64 	%rd37, $str18;
	cvta.global.u64 	%rd38, %rd37;
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd38;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd35;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r79, [retval0+0];
	
	//{
	}// Callseq End 1
	bra.uni 	BB4_63;

BB4_12:
	// inline asm
	call (%r76), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p13, %r76, 0;
	@%p13 bra 	BB4_63;

	add.u64 	%rd31, %SP, 384;
	add.u64 	%rd32, %SPL, 384;
	st.local.v2.u32 	[%rd32], {%r3, %r4};
	st.local.u32 	[%rd32+8], %r5;
	mov.u64 	%rd33, $str19;
	cvta.global.u64 	%rd34, %rd33;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd34;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd31;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r77, [retval0+0];
	
	//{
	}// Callseq End 0
	bra.uni 	BB4_63;
}


